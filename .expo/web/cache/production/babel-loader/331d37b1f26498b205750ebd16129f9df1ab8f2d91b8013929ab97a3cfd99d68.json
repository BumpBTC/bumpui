{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import React from'react';import deepmerge from'deepmerge';import colors from'./colors';import darkColors from'./colorsDark';import{jsx as _jsx}from\"react/jsx-runtime\";export var ThemeContext=React.createContext({theme:{colors:colors}});var ThemeProvider=function(_React$Component){function ThemeProvider(props){var _this;_classCallCheck(this,ThemeProvider);_this=_callSuper(this,ThemeProvider,[props]);_this.updateTheme=function(updates){_this.setState(function(_ref){var theme=_ref.theme;return{theme:deepmerge(theme,updates)};});};_this.replaceTheme=function(theme){_this.setState(function(){return{theme:deepmerge(_this.defaultTheme,theme)};});};_this.getTheme=function(){return _this.state.theme;};var defaultColors=props.useDark?darkColors:colors;_this.defaultTheme=deepmerge({colors:defaultColors},props.theme);_this.state={theme:_this.defaultTheme,useDark:Boolean(props.useDark)};return _this;}_inherits(ThemeProvider,_React$Component);return _createClass(ThemeProvider,[{key:\"render\",value:function render(){return _jsx(ThemeContext.Provider,{value:{theme:this.state.theme,updateTheme:this.updateTheme,replaceTheme:this.replaceTheme},children:this.props.children});}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){var useDark=props.useDark;var isTheme=function isTheme(theme){return!(Object.keys(theme).length===0&&theme.constructor===Object);};if(useDark!==state.useDark||isTheme(props.theme)&&props.theme!==state.theme){var defaultColors=useDark?darkColors:colors;return{theme:deepmerge(state.theme,deepmerge({colors:defaultColors},props.theme)),useDark:useDark};}return null;}}]);}(React.Component);export{ThemeProvider as default};ThemeProvider.defaultProps={theme:{},useDark:false};export var ThemeConsumer=ThemeContext.Consumer;","map":{"version":3,"names":["React","deepmerge","colors","darkColors","jsx","_jsx","ThemeContext","createContext","theme","ThemeProvider","_React$Component","props","_this","_classCallCheck","_callSuper","updateTheme","updates","setState","_ref","replaceTheme","defaultTheme","getTheme","state","defaultColors","useDark","Boolean","_inherits","_createClass","key","value","render","Provider","children","getDerivedStateFromProps","isTheme","Object","keys","length","constructor","Component","default","defaultProps","ThemeConsumer","Consumer"],"sources":["C:/appdev/btcwallet/src/node_modules/react-native-elements/dist/config/ThemeProvider.js"],"sourcesContent":["import React from 'react';\nimport deepmerge from 'deepmerge';\nimport colors from './colors';\nimport darkColors from './colorsDark';\nexport const ThemeContext = React.createContext({\n    theme: {\n        colors,\n    },\n});\nexport default class ThemeProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateTheme = (updates) => {\n            this.setState(({ theme }) => ({\n                theme: deepmerge(theme, updates),\n            }));\n        };\n        this.replaceTheme = (theme) => {\n            this.setState(() => ({\n                theme: deepmerge(this.defaultTheme, theme),\n            }));\n        };\n        this.getTheme = () => this.state.theme;\n        const defaultColors = props.useDark ? darkColors : colors;\n        this.defaultTheme = deepmerge({\n            colors: defaultColors,\n        }, props.theme);\n        this.state = {\n            theme: this.defaultTheme,\n            useDark: Boolean(props.useDark),\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        const { useDark } = props;\n        const isTheme = (theme) => {\n            return !(Object.keys(theme).length === 0 && theme.constructor === Object);\n        };\n        //isTheme will check if the theme is provided by user and will update the theme only if its provided by user\n        //Not checking if the theme exist or not will always result in if statement getting executed as props.theme !== state.theme if theme is not provided\n        if (useDark !== state.useDark ||\n            (isTheme(props.theme) && props.theme !== state.theme)) {\n            const defaultColors = useDark ? darkColors : colors;\n            return {\n                theme: deepmerge(state.theme, deepmerge({\n                    colors: defaultColors,\n                }, props.theme)),\n                useDark,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (<ThemeContext.Provider value={{\n                theme: this.state.theme,\n                updateTheme: this.updateTheme,\n                replaceTheme: this.replaceTheme,\n            }}>\n        {this.props.children}\n      </ThemeContext.Provider>);\n    }\n}\nThemeProvider.defaultProps = {\n    theme: {},\n    useDark: false,\n};\nexport const ThemeConsumer = ThemeContext.Consumer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}