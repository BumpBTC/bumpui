{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import FlatList from\"react-native-web/dist/exports/FlatList\";import{WalletContext}from'../contexts/WalletContext';import{useTheme}from'../contexts/ThemeContext';import{LinearGradient}from'expo-linear-gradient';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";var TransactionHistoryScreen=function TransactionHistoryScreen(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),transactions=_useState2[0],setTransactions=_useState2[1];var _useContext=useContext(WalletContext),getLightningTransactionHistory=_useContext.getLightningTransactionHistory;var _useTheme=useTheme(),colors=_useTheme.colors;useEffect(function(){fetchTransactionHistory();},[]);var fetchTransactionHistory=function(){var _ref=_asyncToGenerator(function*(){try{var history=yield getLightningTransactionHistory();setTransactions(history);}catch(error){console.error('Failed to fetch transaction history:',error);}});return function fetchTransactionHistory(){return _ref.apply(this,arguments);};}();var renderTransactionItem=function renderTransactionItem(_ref2){var item=_ref2.item;return _jsxs(View,{style:[styles.transactionItem,{backgroundColor:colors.card}],children:[_jsxs(Text,{style:[styles.transactionText,{color:colors.text}],children:[\"Amount: \",item.amount,\" sats\"]}),_jsxs(Text,{style:[styles.transactionText,{color:colors.text}],children:[\"Type: \",item.type]}),_jsxs(Text,{style:[styles.transactionText,{color:colors.text}],children:[\"Status: \",item.status]}),_jsxs(Text,{style:[styles.transactionText,{color:colors.text}],children:[\"Date: \",new Date(item.createdAt).toLocaleString()]})]});};return _jsx(LinearGradient,{colors:[colors.background,colors.primary+'22'],style:styles.container,children:_jsx(FlatList,{data:transactions,renderItem:renderTransactionItem,keyExtractor:function keyExtractor(item){return item.id;}})});};var styles=StyleSheet.create({container:{flex:1},transactionItem:{padding:15,marginVertical:8,marginHorizontal:16,borderRadius:5},transactionText:{fontSize:16,marginBottom:5}});export default TransactionHistoryScreen;","map":{"version":3,"names":["React","useEffect","useState","useContext","View","Text","StyleSheet","FlatList","WalletContext","useTheme","LinearGradient","jsxs","_jsxs","jsx","_jsx","TransactionHistoryScreen","_useState","_useState2","_slicedToArray","transactions","setTransactions","_useContext","getLightningTransactionHistory","_useTheme","colors","fetchTransactionHistory","_ref","_asyncToGenerator","history","error","console","apply","arguments","renderTransactionItem","_ref2","item","style","styles","transactionItem","backgroundColor","card","children","transactionText","color","text","amount","type","status","Date","createdAt","toLocaleString","background","primary","container","data","renderItem","keyExtractor","id","create","flex","padding","marginVertical","marginHorizontal","borderRadius","fontSize","marginBottom"],"sources":["C:/appdev/btcwallet/src/screens/TransactionHistoryScreen.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { View, Text, StyleSheet, FlatList } from 'react-native';\r\nimport { WalletContext } from '../contexts/WalletContext';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst TransactionHistoryScreen = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const { getLightningTransactionHistory } = useContext(WalletContext);\r\n  const { colors } = useTheme();\r\n\r\n  useEffect(() => {\r\n    fetchTransactionHistory();\r\n  }, []);\r\n\r\n  const fetchTransactionHistory = async () => {\r\n    try {\r\n      const history = await getLightningTransactionHistory();\r\n      setTransactions(history);\r\n    } catch (error) {\r\n      console.error('Failed to fetch transaction history:', error);\r\n    }\r\n  };\r\n\r\n  const renderTransactionItem = ({ item }) => (\r\n    <View style={[styles.transactionItem, { backgroundColor: colors.card }]}>\r\n      <Text style={[styles.transactionText, { color: colors.text }]}>Amount: {item.amount} sats</Text>\r\n      <Text style={[styles.transactionText, { color: colors.text }]}>Type: {item.type}</Text>\r\n      <Text style={[styles.transactionText, { color: colors.text }]}>Status: {item.status}</Text>\r\n      <Text style={[styles.transactionText, { color: colors.text }]}>Date: {new Date(item.createdAt).toLocaleString()}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <LinearGradient colors={[colors.background, colors.primary + '22']} style={styles.container}>\r\n      <FlatList\r\n        data={transactions}\r\n        renderItem={renderTransactionItem}\r\n        keyExtractor={(item) => item.id}\r\n      />\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  transactionItem: {\r\n    padding: 15,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    borderRadius: 5,\r\n  },\r\n  transactionText: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n});\r\n\r\nexport default TransactionHistoryScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}