{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useTheme}from'../contexts/ThemeContext';import Input from'../components/Input';import Button from'../components/Button';import api from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var EditContactScreen=function EditContactScreen(_ref){var route=_ref.route,navigation=_ref.navigation;var contact=route.params.contact;var _useState=useState(contact.name),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(contact.bitcoinAddress),_useState4=_slicedToArray(_useState3,2),bitcoinAddress=_useState4[0],setBitcoinAddress=_useState4[1];var _useState5=useState(contact.lightningPublicKey),_useState6=_slicedToArray(_useState5,2),lightningPublicKey=_useState6[0],setLightningPublicKey=_useState6[1];var _useState7=useState(contact.litecoinAddress),_useState8=_slicedToArray(_useState7,2),litecoinAddress=_useState8[0],setLitecoinAddress=_useState8[1];var _useTheme=useTheme(),colors=_useTheme.colors;var handleUpdateContact=function(){var _ref2=_asyncToGenerator(function*(){try{yield api.put(`/contacts/${contact._id}`,{name:name,bitcoinAddress:bitcoinAddress,lightningPublicKey:lightningPublicKey,litecoinAddress:litecoinAddress});navigation.goBack();}catch(error){console.error('Failed to update contact:',error);}});return function handleUpdateContact(){return _ref2.apply(this,arguments);};}();return _jsxs(View,{style:[styles.container,{backgroundColor:colors.background}],children:[_jsx(Input,{label:\"Name\",value:name,onChangeText:setName,placeholder:\"Enter contact name\"}),_jsx(Input,{label:\"Bitcoin Address\",value:bitcoinAddress,onChangeText:setBitcoinAddress,placeholder:\"Enter Bitcoin address\"}),_jsx(Input,{label:\"Lightning Public Key\",value:lightningPublicKey,onChangeText:setLightningPublicKey,placeholder:\"Enter Lightning public key\"}),_jsx(Input,{label:\"Litecoin Address\",value:litecoinAddress,onChangeText:setLitecoinAddress,placeholder:\"Enter Litecoin address\"}),_jsx(Button,{title:\"Update Contact\",onPress:handleUpdateContact,style:styles.updateButton})]});};var styles=StyleSheet.create({container:{flex:1,padding:20},updateButton:{marginTop:20}});export default EditContactScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","useTheme","Input","Button","api","jsx","_jsx","jsxs","_jsxs","EditContactScreen","_ref","route","navigation","contact","params","_useState","name","_useState2","_slicedToArray","setName","_useState3","bitcoinAddress","_useState4","setBitcoinAddress","_useState5","lightningPublicKey","_useState6","setLightningPublicKey","_useState7","litecoinAddress","_useState8","setLitecoinAddress","_useTheme","colors","handleUpdateContact","_ref2","_asyncToGenerator","put","_id","goBack","error","console","apply","arguments","style","styles","container","backgroundColor","background","children","label","value","onChangeText","placeholder","title","onPress","updateButton","create","flex","padding","marginTop"],"sources":["C:/appdev/btcwallet/src/screens/EditContactScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport Input from '../components/Input';\r\nimport Button from '../components/Button';\r\nimport api from '../services/api';\r\n\r\nconst EditContactScreen = ({ route, navigation }) => {\r\n  const { contact } = route.params;\r\n  const [name, setName] = useState(contact.name);\r\n  const [bitcoinAddress, setBitcoinAddress] = useState(contact.bitcoinAddress);\r\n  const [lightningPublicKey, setLightningPublicKey] = useState(contact.lightningPublicKey);\r\n  const [litecoinAddress, setLitecoinAddress] = useState(contact.litecoinAddress);\r\n  const { colors } = useTheme();\r\n\r\n  const handleUpdateContact = async () => {\r\n    try {\r\n      await api.put(`/contacts/${contact._id}`, {\r\n        name,\r\n        bitcoinAddress,\r\n        lightningPublicKey,\r\n        litecoinAddress,\r\n      });\r\n      navigation.goBack();\r\n    } catch (error) {\r\n      console.error('Failed to update contact:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n      <Input\r\n        label=\"Name\"\r\n        value={name}\r\n        onChangeText={setName}\r\n        placeholder=\"Enter contact name\"\r\n      />\r\n      <Input\r\n        label=\"Bitcoin Address\"\r\n        value={bitcoinAddress}\r\n        onChangeText={setBitcoinAddress}\r\n        placeholder=\"Enter Bitcoin address\"\r\n      />\r\n      <Input\r\n        label=\"Lightning Public Key\"\r\n        value={lightningPublicKey}\r\n        onChangeText={setLightningPublicKey}\r\n        placeholder=\"Enter Lightning public key\"\r\n      />\r\n      <Input\r\n        label=\"Litecoin Address\"\r\n        value={litecoinAddress}\r\n        onChangeText={setLitecoinAddress}\r\n        placeholder=\"Enter Litecoin address\"\r\n      />\r\n      <Button title=\"Update Contact\" onPress={handleUpdateContact} style={styles.updateButton} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  updateButton: {\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default EditContactScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}