{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useContext}from\"react\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Alert from\"react-native-web/dist/exports/Alert\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Switch from\"react-native-web/dist/exports/Switch\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import AsyncStorage from'@react-native-async-storage/async-storage';import{Ionicons}from\"@expo/vector-icons\";import Input from\"../components/Input\";import Button from\"../components/Button\";import{signup,login}from\"../services/api\";import{saveToken}from\"../services/auth\";import{WalletContext}from\"../contexts/WalletContext\";import{useTheme}from\"../contexts/ThemeContext\";import BackupModal from\"../components/BackupModal\";import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var SignupScreen=function SignupScreen(_ref){var navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(\"tb1q7yqz9q86ajpfmw6u8dl5ma66hxwattmh9q9l0x\"),_useState10=_slicedToArray(_useState9,2),bitcoinAddress=_useState10[0],setBitcoinAddress=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),createBitcoin=_useState12[0],setCreateBitcoin=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),createLitecoin=_useState14[0],setCreateLitecoin=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),createLightning=_useState16[0],setCreateLightning=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),bitcoinWallet=_useState18[0],setBitcoinWallet=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),lightningWallet=_useState20[0],setLightningWallet=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),litecoinWallet=_useState22[0],setLitecoinWallet=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),showBackupModal=_useState24[0],setShowBackupModal=_useState24[1];var _useState25=useState(null),_useState26=_slicedToArray(_useState25,2),walletData=_useState26[0],setWalletData=_useState26[1];var _useState27=useState(\"bitcoin\"),_useState28=_slicedToArray(_useState27,2),selectedWalletType=_useState28[0],setSelectedWalletType=_useState28[1];var _useContext=useContext(WalletContext),login=_useContext.login,setWallets=_useContext.setWallets,setSelectedCrypto=_useContext.setSelectedCrypto,fetchWalletData=_useContext.fetchWalletData,setIsLoggedIn=_useContext.setIsLoggedIn;var _useTheme=useTheme(),colors=_useTheme.colors;var handleSignup=function(){var _ref2=_asyncToGenerator(function*(){try{var data=yield signup(username,email,password);yield AsyncStorage.setItem('userToken',data.token);setIsLoggedIn(true);fetchWalletData();}catch(error){console.error('Signup failed:',error);}});return function handleSignup(){return _ref2.apply(this,arguments);};}();return _jsxs(ScrollView,{style:[styles.container,{backgroundColor:colors.background}],children:[_jsx(TextInput,{style:styles.input,value:username,onChangeText:setUsername,placeholder:\"Enter a username\",placeholderTextColor:colors.text}),_jsx(TextInput,{style:styles.input,value:email,onChangeText:setEmail,placeholder:\"Enter email (optional)\",placeholderTextColor:colors.text,keyboardType:\"email-address\"}),_jsx(TextInput,{style:styles.input,value:password,onChangeText:setPassword,secureTextEntry:true,placeholder:\"Create a password\",placeholderTextColor:colors.text}),_jsx(TextInput,{style:styles.input,value:confirmPassword,onChangeText:setConfirmPassword,secureTextEntry:true,placeholder:\"Confirm your password\",placeholderTextColor:colors.text}),_jsx(Button,{title:\"Sign Up\",onPress:handleSignup}),_jsx(TouchableOpacity,{onPress:function onPress(){return navigation.navigate('Login');},children:_jsx(Text,{style:styles.loginLink,children:\"Already have an account? Log in\"})})]});};var styles=StyleSheet.create({container:{flex:1,padding:20},input:{height:40,borderColor:'gray',borderWidth:1,marginBottom:10,paddingHorizontal:10},loginLink:{marginTop:15,color:'blue',textAlign:'center'},walletSelection:{marginBottom:20},walletLabel:{fontSize:16,fontWeight:\"bold\",marginBottom:10},addressContainer:{marginVertical:20,padding:10,backgroundColor:'rgba(255, 255, 255, 0.1)',borderRadius:10},addressLabel:{fontSize:16,fontWeight:'bold',marginBottom:5},addressText:{fontSize:14},walletOption:{flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",marginBottom:10},walletType:{fontSize:14}});export default SignupScreen;","map":{"version":3,"names":["React","useState","useContext","View","StyleSheet","TextInput","Alert","ScrollView","Switch","Text","TouchableOpacity","AsyncStorage","Ionicons","Input","Button","signup","login","saveToken","WalletContext","useTheme","BackupModal","axios","jsx","_jsx","jsxs","_jsxs","SignupScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","email","setEmail","_useState7","_useState8","confirmPassword","setConfirmPassword","_useState9","_useState10","bitcoinAddress","setBitcoinAddress","_useState11","_useState12","createBitcoin","setCreateBitcoin","_useState13","_useState14","createLitecoin","setCreateLitecoin","_useState15","_useState16","createLightning","setCreateLightning","_useState17","_useState18","bitcoinWallet","setBitcoinWallet","_useState19","_useState20","lightningWallet","setLightningWallet","_useState21","_useState22","litecoinWallet","setLitecoinWallet","_useState23","_useState24","showBackupModal","setShowBackupModal","_useState25","_useState26","walletData","setWalletData","_useState27","_useState28","selectedWalletType","setSelectedWalletType","_useContext","setWallets","setSelectedCrypto","fetchWalletData","setIsLoggedIn","_useTheme","colors","handleSignup","_ref2","_asyncToGenerator","data","setItem","token","error","console","apply","arguments","style","styles","container","backgroundColor","background","children","input","value","onChangeText","placeholder","placeholderTextColor","text","keyboardType","secureTextEntry","title","onPress","navigate","loginLink","create","flex","padding","height","borderColor","borderWidth","marginBottom","paddingHorizontal","marginTop","color","textAlign","walletSelection","walletLabel","fontSize","fontWeight","addressContainer","marginVertical","borderRadius","addressLabel","addressText","walletOption","flexDirection","justifyContent","alignItems","walletType"],"sources":["C:/appdev/btcwallet/src/screens/SignupScreen.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  Alert,\r\n  ScrollView,\r\n  Switch,\r\n  Text,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport Input from \"../components/Input\";\r\nimport Button from \"../components/Button\";\r\nimport { signup, login } from \"../services/api\";\r\nimport { saveToken } from \"../services/auth\";\r\nimport { WalletContext } from \"../contexts/WalletContext\";\r\nimport { useTheme } from \"../contexts/ThemeContext\";\r\nimport BackupModal from \"../components/BackupModal\";\r\nimport axios from 'axios';\r\n\r\nconst SignupScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [bitcoinAddress, setBitcoinAddress] = useState(\"tb1q7yqz9q86ajpfmw6u8dl5ma66hxwattmh9q9l0x\");\r\n  const [createBitcoin, setCreateBitcoin] = useState(false);\r\n  const [createLitecoin, setCreateLitecoin] = useState(false);\r\n  const [createLightning, setCreateLightning] = useState(false);\r\n  const [bitcoinWallet, setBitcoinWallet] = useState(false);\r\n  const [lightningWallet, setLightningWallet] = useState(false);\r\n  const [litecoinWallet, setLitecoinWallet] = useState(false);\r\n  const [showBackupModal, setShowBackupModal] = useState(false);\r\n  const [walletData, setWalletData] = useState(null);\r\n  const [selectedWalletType, setSelectedWalletType] = useState(\"bitcoin\");\r\n  const { login, setWallets, setSelectedCrypto, fetchWalletData, setIsLoggedIn } = useContext(WalletContext);\r\n  const { colors } = useTheme();\r\n\r\n  // const handleSignup = async () => {\r\n  //   if (password !== confirmPassword) {\r\n  //     Alert.alert('Error', 'Passwords do not match');\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (!bitcoinWallet && !lightningWallet && !litecoinWallet) {\r\n  //     Alert.alert('Error', 'Please select at least one wallet type');\r\n  //     return;\r\n  //   }\r\n\r\n  //   try {\r\n  //     const response = await api.post('/auth/register', {\r\n  //       username,\r\n  //       email,\r\n  //       password,\r\n  //       walletTypes: {\r\n  //         bitcoin: bitcoinWallet,\r\n  //         lightning: lightningWallet,\r\n  //         litecoin: litecoinWallet\r\n  //       }\r\n  //     });\r\n\r\n  //     const { token, user } = response.data;\r\n  //     await saveToken(token);\r\n  //     await login(token);\r\n  //     setWalletData(user.wallets);\r\n  //     navigation.navigate('Home', { walletData: user.wallets });\r\n  //     // setShowBackupModal(true);\r\n\r\n  //     if (email) {\r\n  //       // TODO: Implement email backup functionality\r\n  //       // This should be handled on the server-side\r\n  //       Alert.alert('Success', 'Account created successfully. Check your email for wallet backup information.');\r\n  //     } else {\r\n  //       Alert.alert('Success', 'Account created successfully.');\r\n  //     }\r\n\r\n  //     navigation.reset({\r\n  //       index: 0,\r\n  //       routes: [{ name: 'Home' }],\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.error('Signup error:', error.response?.data || error.message);\r\n  //     Alert.alert('Signup Failed', error.response?.data?.error || 'Failed to create account. Please try again.');\r\n  //   }\r\n  // };\r\n\r\n  const handleSignup = async () => {\r\n    try {\r\n      const data = await signup(username, email, password);\r\n      await AsyncStorage.setItem('userToken', data.token);\r\n      setIsLoggedIn(true);\r\n      fetchWalletData();\r\n    } catch (error) {\r\n      console.error('Signup failed:', error);\r\n      // Show error message to user\r\n    }\r\n  };\r\n\r\n  // const handleSignup = async () => {\r\n  //   if (password !== confirmPassword) {\r\n  //     Alert.alert('Error', 'Passwords do not match');\r\n  //     return;\r\n  //   }\r\n\r\n  //   try {\r\n  //     const response = await api.post(\"/auth/signup\", {\r\n  //       username,\r\n  //       email,\r\n  //       password,\r\n  //       wallets: [\r\n  //         { type: \"bitcoin\", address: bitcoinAddress, balance: \"0.00000\" },\r\n  //         { type: \"lightning\", address: \"sample_lightning_address\", balance: \"0\" },\r\n  //         { type: \"litecoin\", address: \"sample_litecoin_address\", balance: \"0.00\" }\r\n  //       ]\r\n  //     });\r\n  //     console.log(\"Signup successful:\", response.data);\r\n  //     await login(response.data.token);\r\n  //     setWallets(response.data.user.wallets || []);\r\n  //     navigation.navigate(\"Home\"); // Remove the user parameter\r\n  //   } catch (error) {\r\n  //     console.error(\"Signup error:\", error.response?.data || error.message);\r\n  //     Alert.alert('Signup Failed', error.response?.data?.error || 'Failed to create account. Please try again.');\r\n  //   }\r\n  // };\r\n\r\n  // const handleBackupComplete = async (backedUp, backupEmail) => {\r\n  //   setShowBackupModal(false);\r\n  //   try {\r\n  //     const { token, user } = await api.post(\"/auth/complete-signup\", {\r\n  //       backedUp,\r\n  //       email: backupEmail || email,\r\n  //     });\r\n  //     await login(token);\r\n  //     setSelectedCrypto(selectedWalletType);\r\n  //     navigation.reset({\r\n  //       index: 0,\r\n  //       routes: [{ name: \"Home\" }],\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.error(\"Error completing signup:\", error);\r\n  //     Alert.alert(\"Error\", \"Failed to complete signup. Please try again.\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <ScrollView style={[styles.container, { backgroundColor: colors.background }]}>\r\n      <TextInput\r\n        style={styles.input}\r\n        value={username}\r\n        onChangeText={setUsername}\r\n        placeholder=\"Enter a username\"\r\n        placeholderTextColor={colors.text}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        placeholder=\"Enter email (optional)\"\r\n        placeholderTextColor={colors.text}\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n        placeholder=\"Create a password\"\r\n        placeholderTextColor={colors.text}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        value={confirmPassword}\r\n        onChangeText={setConfirmPassword}\r\n        secureTextEntry\r\n        placeholder=\"Confirm your password\"\r\n        placeholderTextColor={colors.text}\r\n      />\r\n      <Button title=\"Sign Up\" onPress={handleSignup} />\r\n      <TouchableOpacity onPress={() => navigation.navigate('Login')}>\r\n        <Text style={styles.loginLink}>Already have an account? Log in</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  loginLink: {\r\n    marginTop: 15,\r\n    color: 'blue',\r\n    textAlign: 'center',\r\n  },\r\n  walletSelection: {\r\n    marginBottom: 20,\r\n  },\r\n  walletLabel: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n  },\r\n  addressContainer: {\r\n    marginVertical: 20,\r\n    padding: 10,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    borderRadius: 10,\r\n  },\r\n  addressLabel: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  addressText: {\r\n    fontSize: 14,\r\n  },\r\n  walletOption: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  walletType: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default SignupScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}