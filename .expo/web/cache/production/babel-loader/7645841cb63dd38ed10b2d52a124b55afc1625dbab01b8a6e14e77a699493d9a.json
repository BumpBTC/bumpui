{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import{Input,Button}from'react-native-elements';import{useTheme}from'../contexts/ThemeContext';import{WalletContext}from'../contexts/WalletContext';import QRCode from'react-native-qrcode-svg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var GoogleAuthSetupScreen=function GoogleAuthSetupScreen(_ref){var navigation=_ref.navigation;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),authCode=_useState2[0],setAuthCode=_useState2[1];var _useTheme=useTheme(),colors=_useTheme.colors;var _useContext=useContext(WalletContext),wallets=_useContext.wallets,updateSecurityLevel=_useContext.updateSecurityLevel,securityLevel=_useContext.securityLevel;var handleSetup=function(){var _ref2=_asyncToGenerator(function*(){alert('Google Authenticator set up successfully');if(securityLevel<1){yield updateSecurityLevel(1);navigation.goBack();}});return function handleSetup(){return _ref2.apply(this,arguments);};}();return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.title,children:\"Google Authenticator Setup\"}),_jsx(Text,{style:styles.description,children:\"Scan the QR code below with your Google Authenticator app on your phone.\"}),_jsx(QRCode,{size:200,color:colors.text,backgroundColor:colors.background}),_jsx(Text,{style:styles.description,children:\"Or enter this code:\"}),_jsx(Text,{style:styles.code,children:\"ABCD EFGH IJKL MNOP\"}),_jsx(Input,{placeholder:\"Enter the 6-digit code from your Auth App\",value:authCode,onChangeText:setAuthCode,keyboardType:\"numeric\"}),_jsx(Button,{title:\"Verify and Setup\",onPress:handleSetup})]});};var styles=StyleSheet.create({container:{flex:1,padding:20,alignItems:'center'},title:{fontSize:24,marginBottom:20},description:{marginBottom:20,textAlign:'center'},qrCode:{width:200,height:200,marginBottom:20},code:{marginBottom:20,fontWeight:'bold'}});export default GoogleAuthSetupScreen;","map":{"version":3,"names":["React","useState","useContext","View","Text","StyleSheet","Image","Input","Button","useTheme","WalletContext","QRCode","jsx","_jsx","jsxs","_jsxs","GoogleAuthSetupScreen","_ref","navigation","_useState","_useState2","_slicedToArray","authCode","setAuthCode","_useTheme","colors","_useContext","wallets","updateSecurityLevel","securityLevel","handleSetup","_ref2","_asyncToGenerator","alert","goBack","apply","arguments","style","styles","container","children","title","description","size","color","text","backgroundColor","background","code","placeholder","value","onChangeText","keyboardType","onPress","create","flex","padding","alignItems","fontSize","marginBottom","textAlign","qrCode","width","height","fontWeight"],"sources":["C:/appdev/btcwallet/src/screens/GoogleAuthSetupScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Image } from 'react-native';\r\nimport { Input, Button } from 'react-native-elements';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport { WalletContext } from '../contexts/WalletContext';\r\nimport QRCode from 'react-native-qrcode-svg';\r\n\r\nconst GoogleAuthSetupScreen = ({ navigation }) => {\r\n  const [authCode, setAuthCode] = useState('');\r\n  const { colors } = useTheme();\r\n  const { wallets, updateSecurityLevel, securityLevel } = useContext(WalletContext);\r\n\r\n  const handleSetup = async () => {\r\n    // TODO: Verify the entered code\r\n    alert('Google Authenticator set up successfully');\r\n    if (securityLevel < 1) {\r\n        await updateSecurityLevel(1);\r\n        navigation.goBack();\r\n      }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Google Authenticator Setup</Text>\r\n      <Text style={styles.description}>\r\n        Scan the QR code below with your Google Authenticator app on your phone.\r\n      </Text>\r\n\r\n      {/* Placeholder for QR code image */}\r\n      <QRCode\r\n        // value={invoice}\r\n        size={200}\r\n        color={colors.text}\r\n        backgroundColor={colors.background}\r\n      />\r\n\r\n<Text style={styles.description}>Or enter this code:</Text>\r\n      <Text style={styles.code}>ABCD EFGH IJKL MNOP</Text>\r\n\r\n      <Input\r\n        placeholder=\"Enter the 6-digit code from your Auth App\"\r\n        value={authCode}\r\n        onChangeText={setAuthCode}\r\n        keyboardType=\"numeric\"\r\n      />\r\n\r\n      <Button title=\"Verify and Setup\" onPress={handleSetup} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n  },\r\n  description: {\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  qrCode: {\r\n    width: 200,\r\n    height: 200,\r\n    marginBottom: 20,\r\n  },\r\n  code: {\r\n    marginBottom: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default GoogleAuthSetupScreen;\r\n\r\n// TODO: Generate actual QR code and secret key\r\n// TODO: Implement verification of entered code\r\n// TODO: Handle success/error states"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}