{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useTheme}from'../contexts/ThemeContext';import ContactList from'../components/ContactList';import Button from'../components/Button';import api from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var ContactsScreen=function ContactsScreen(_ref){var navigation=_ref.navigation;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useTheme=useTheme(),colors=_useTheme.colors;useEffect(function(){fetchContacts();},[]);var fetchContacts=function(){var _ref2=_asyncToGenerator(function*(){try{var response=yield api.get('/contacts');setContacts(response.data);}catch(error){console.error('Failed to fetch contacts:',error);}});return function fetchContacts(){return _ref2.apply(this,arguments);};}();var handleContactPress=function handleContactPress(contact){navigation.navigate('ContactDetails',{contact:contact});};return _jsxs(View,{style:[styles.container,{backgroundColor:colors.background}],children:[_jsx(ContactList,{contacts:contacts,onContactPress:handleContactPress}),_jsx(Button,{title:\"Add Contact\",onPress:function onPress(){return navigation.navigate('AddContact');},style:styles.addButton})]});};var styles=StyleSheet.create({container:{flex:1,padding:20},addButton:{marginTop:20}});export default ContactsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","useTheme","ContactList","Button","api","jsx","_jsx","jsxs","_jsxs","ContactsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","contacts","setContacts","_useTheme","colors","fetchContacts","_ref2","_asyncToGenerator","response","get","data","error","console","apply","arguments","handleContactPress","contact","navigate","style","styles","container","backgroundColor","background","children","onContactPress","title","onPress","addButton","create","flex","padding","marginTop"],"sources":["C:/appdev/btcwallet/src/screens/ContactsScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport ContactList from '../components/ContactList';\r\nimport Button from '../components/Button';\r\nimport api from '../services/api';\r\n\r\nconst ContactsScreen = ({ navigation }) => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { colors } = useTheme();\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, []);\r\n\r\n  const fetchContacts = async () => {\r\n    try {\r\n      const response = await api.get('/contacts');\r\n      setContacts(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch contacts:', error);\r\n    }\r\n  };\r\n\r\n  const handleContactPress = (contact) => {\r\n    navigation.navigate('ContactDetails', { contact });\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n      <ContactList contacts={contacts} onContactPress={handleContactPress} />\r\n      <Button\r\n        title=\"Add Contact\"\r\n        onPress={() => navigation.navigate('AddContact')}\r\n        style={styles.addButton}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  addButton: {\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default ContactsScreen;"],"mappings":"wIAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,IAAA,iDAAAC,UAAA,gDAEnD,OAASC,QAAQ,KAAQ,0BAA0B,CACnD,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAAC,IAAA,CAAuB,IAAjB,CAAAC,UAAU,CAAAD,IAAA,CAAVC,UAAU,CAClC,IAAAC,SAAA,CAAgCd,QAAQ,CAAC,EAAE,CAAC,CAAAe,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,SAAA,CAAmBhB,QAAQ,CAAC,CAAC,CAArBiB,MAAM,CAAAD,SAAA,CAANC,MAAM,CAEdrB,SAAS,CAAC,UAAM,CACdsB,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAA,aAAa,gBAAAC,KAAA,CAAAC,iBAAA,CAAG,WAAY,CAChC,GAAI,CACF,GAAM,CAAAC,QAAQ,MAAS,CAAAlB,GAAG,CAACmB,GAAG,CAAC,WAAW,CAAC,CAC3CP,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC,CAC5B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,iBAPK,CAAAN,aAAaA,CAAA,SAAAC,KAAA,CAAAO,KAAA,MAAAC,SAAA,OAOlB,CAED,GAAM,CAAAC,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAIC,OAAO,CAAK,CACtCnB,UAAU,CAACoB,QAAQ,CAAC,gBAAgB,CAAE,CAAED,OAAO,CAAPA,OAAQ,CAAC,CAAC,CACpD,CAAC,CAED,MACE,CAAAtB,KAAA,CAACT,IAAI,EAACiC,KAAK,CAAE,CAACC,MAAM,CAACC,SAAS,CAAE,CAAEC,eAAe,CAAEjB,MAAM,CAACkB,UAAW,CAAC,CAAE,CAAAC,QAAA,EACtE/B,IAAA,CAACJ,WAAW,EAACa,QAAQ,CAAEA,QAAS,CAACuB,cAAc,CAAET,kBAAmB,CAAE,CAAC,CACvEvB,IAAA,CAACH,MAAM,EACLoC,KAAK,CAAC,aAAa,CACnBC,OAAO,CAAE,QAAT,CAAAA,OAAOA,CAAA,QAAQ,CAAA7B,UAAU,CAACoB,QAAQ,CAAC,YAAY,CAAC,EAAC,CACjDC,KAAK,CAAEC,MAAM,CAACQ,SAAU,CACzB,CAAC,EACE,CAAC,CAEX,CAAC,CAED,GAAM,CAAAR,MAAM,CAAGjC,UAAU,CAAC0C,MAAM,CAAC,CAC/BR,SAAS,CAAE,CACTS,IAAI,CAAE,CAAC,CACPC,OAAO,CAAE,EACX,CAAC,CACDH,SAAS,CAAE,CACTI,SAAS,CAAE,EACb,CACF,CAAC,CAAC,CAEF,cAAe,CAAApC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}