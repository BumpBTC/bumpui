{"ast":null,"code":"var _toConsumableArray=require(\"@babel/runtime/helpers/toConsumableArray\");var util=require('./util');var CREDENTIAL_FIELD_ID=[0x10,0x0e];var SSID_FIELD_ID=[0x10,0x45];var AUTH_TYPE_FIELD_ID=[0x10,0x03];var NETWORK_KEY_FIELD_ID=[0x10,0x27];var AUTH_TYPES={OPEN:[0x00,0x00],WPA2_PSK:[0x00,0x20]};function _getLengthBytes(valueBytes){if(valueBytes.length>255){return[Math.floor(valueBytes.length/256),valueBytes.length%256];}return[0x0,valueBytes.length];}function _arrayEqual(arr1,arr2){if(arr1.length!==arr2.length){return false;}for(var i=0;i<arr1.length;i++){if(arr1[i]!==arr2[i]){return false;}}return true;}function _getNextTLV(bytes){var type=bytes.slice(0,2);var length=bytes.slice(2,4);var value=bytes.slice(4,4+(length[0]*256+length[1]));return{type:type,length:length,value:value};}function decode(bytes){var result={};while(bytes.length>0){var _getNextTLV2=_getNextTLV(bytes),type=_getNextTLV2.type,value=_getNextTLV2.value;bytes=bytes.slice(4+value.length,bytes.length);if(_arrayEqual(CREDENTIAL_FIELD_ID,type)){var credential=value;while(credential.length>0){var tlv=_getNextTLV(credential);credential=credential.slice(4+tlv.value.length,credential.length);if(_arrayEqual(AUTH_TYPE_FIELD_ID,tlv.type)){result.authType=tlv.value;}else if(_arrayEqual(SSID_FIELD_ID,tlv.type)){result.ssid=util.bytesToString(tlv.value);}else if(_arrayEqual(NETWORK_KEY_FIELD_ID,tlv.type)){result.networkKey=util.bytesToString(tlv.value);}}}}return result;}function encode(_ref){var ssid=_ref.ssid,networkKey=_ref.networkKey,_ref$authType=_ref.authType,authType=_ref$authType===void 0?AUTH_TYPES.WPA2_PSK:_ref$authType;if(typeof ssid!=='string'||typeof networkKey!=='string'){throw new Error('');}ssid=util.stringToBytes(ssid);networkKey=util.stringToBytes(networkKey);var authTypeTLV=[].concat(AUTH_TYPE_FIELD_ID,[0x0,authType.length],_toConsumableArray(authType));var ssidTLV=[].concat(SSID_FIELD_ID,[0x0,ssid.length],_toConsumableArray(ssid));var networkKeyTLV=[].concat(NETWORK_KEY_FIELD_ID,[0x0,networkKey.length],_toConsumableArray(networkKey));var credentialValue=[].concat(_toConsumableArray(authTypeTLV),_toConsumableArray(ssidTLV),_toConsumableArray(networkKeyTLV));var credentialTLV=[].concat(CREDENTIAL_FIELD_ID,_toConsumableArray(_getLengthBytes(credentialValue)),_toConsumableArray(credentialValue));return credentialTLV;}module.exports={encodePayload:encode,decodePayload:decode,authTypes:AUTH_TYPES};","map":{"version":3,"names":["util","require","CREDENTIAL_FIELD_ID","SSID_FIELD_ID","AUTH_TYPE_FIELD_ID","NETWORK_KEY_FIELD_ID","AUTH_TYPES","OPEN","WPA2_PSK","_getLengthBytes","valueBytes","length","Math","floor","_arrayEqual","arr1","arr2","i","_getNextTLV","bytes","type","slice","value","decode","result","_getNextTLV2","credential","tlv","authType","ssid","bytesToString","networkKey","encode","_ref","_ref$authType","Error","stringToBytes","authTypeTLV","concat","_toConsumableArray","ssidTLV","networkKeyTLV","credentialValue","credentialTLV","module","exports","encodePayload","decodePayload","authTypes"],"sources":["C:/appdev/btcwallet/src/node_modules/react-native-nfc-manager/ndef-lib/ndef-wifi-simple.js"],"sourcesContent":["var util = require('./util');\n\nconst CREDENTIAL_FIELD_ID = [0x10, 0x0e];\nconst SSID_FIELD_ID = [0x10, 0x45];\nconst AUTH_TYPE_FIELD_ID = [0x10, 0x03];\nconst NETWORK_KEY_FIELD_ID = [0x10, 0x27];\n\nconst AUTH_TYPES = {\n  OPEN: [0x00, 0x00],\n  WPA2_PSK: [0x00, 0x20],\n};\n\nfunction _getLengthBytes(valueBytes) {\n  if (valueBytes.length > 255) {\n    return [Math.floor(valueBytes.length / 256), valueBytes.length % 256];\n  }\n  return [0x0, valueBytes.length];\n}\n\nfunction _arrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _getNextTLV(bytes) {\n  const type = bytes.slice(0, 2);\n  const length = bytes.slice(2, 4);\n  const value = bytes.slice(4, 4 + (length[0] * 256 + length[1]));\n  return {\n    type,\n    length,\n    value,\n  };\n}\n\n// @returns an string of wifi credentials\nfunction decode(bytes) {\n  let result = {};\n\n  while (bytes.length > 0) {\n    let {type, value} = _getNextTLV(bytes);\n    bytes = bytes.slice(4 + value.length, bytes.length);\n\n    if (_arrayEqual(CREDENTIAL_FIELD_ID, type)) {\n      let credential = value;\n\n      while (credential.length > 0) {\n        let tlv = _getNextTLV(credential);\n        credential = credential.slice(4 + tlv.value.length, credential.length);\n\n        if (_arrayEqual(AUTH_TYPE_FIELD_ID, tlv.type)) {\n          result.authType = tlv.value;\n        } else if (_arrayEqual(SSID_FIELD_ID, tlv.type)) {\n          result.ssid = util.bytesToString(tlv.value);\n        } else if (_arrayEqual(NETWORK_KEY_FIELD_ID, tlv.type)) {\n          result.networkKey = util.bytesToString(tlv.value);\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\n// encode wifi object payload\n// @returns an array of bytes\nfunction encode({ssid, networkKey, authType = AUTH_TYPES.WPA2_PSK}) {\n  if (typeof ssid !== 'string' || typeof networkKey !== 'string') {\n    throw new Error('');\n  }\n\n  ssid = util.stringToBytes(ssid);\n  networkKey = util.stringToBytes(networkKey);\n\n  // build seperated TLV\n  const authTypeTLV = [\n    ...AUTH_TYPE_FIELD_ID,\n    0x0,\n    authType.length,\n    ...authType,\n  ];\n  const ssidTLV = [...SSID_FIELD_ID, 0x0, ssid.length, ...ssid];\n  const networkKeyTLV = [\n    ...NETWORK_KEY_FIELD_ID,\n    0x0,\n    networkKey.length,\n    ...networkKey,\n  ];\n\n  // build credential TLV\n  const credentialValue = [...authTypeTLV, ...ssidTLV, ...networkKeyTLV];\n  const credentialTLV = [\n    ...CREDENTIAL_FIELD_ID,\n    ..._getLengthBytes(credentialValue),\n    ...credentialValue,\n  ];\n\n  return credentialTLV;\n}\n\nmodule.exports = {\n  encodePayload: encode,\n  decodePayload: decode,\n  authTypes: AUTH_TYPES,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}