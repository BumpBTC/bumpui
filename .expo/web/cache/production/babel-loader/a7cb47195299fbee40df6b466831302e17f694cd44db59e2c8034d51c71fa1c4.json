{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import{callNative}from'./NativeNfcManager';import{NfcManagerBase}from'./NfcManager';import{MifareClassicHandlerAndroid}from'./NfcTech/MifareClassicHandlerAndroid';import{MifareUltralightHandlerAndroid}from'./NfcTech/MifareUltralightHandlerAndroid';import{NdefFormatableHandlerAndroid}from'./NfcTech/NdefFormatableHandlerAndroid';import{handleNativeException,buildNfcExceptionAndroid}from'./NfcError';var NfcAdapter={FLAG_READER_NFC_A:0x1,FLAG_READER_NFC_B:0x2,FLAG_READER_NFC_F:0x4,FLAG_READER_NFC_V:0x8,FLAG_READER_NFC_BARCODE:0x10,FLAG_READER_SKIP_NDEF_CHECK:0x80,FLAG_READER_NO_PLATFORM_SOUNDS:0x100};var delay=function delay(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};var NfcManagerAndroid=function(_NfcManagerBase){function NfcManagerAndroid(){var _this;_classCallCheck(this,NfcManagerAndroid);_this=_callSuper(this,NfcManagerAndroid);_this.requestTechnology=function(){var _ref=_asyncToGenerator(function*(tech){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{if(typeof tech==='string'){tech=[tech];}var sessionAvailable=yield _this._hasTagEventRegistrationAndroid();if(!sessionAvailable){yield _this.registerTagEvent(options);_this.cleanUpTagRegistration=true;}return yield callNative('requestTechnology',[tech]);}catch(ex){throw buildNfcExceptionAndroid(ex);}});return function(_x){return _ref.apply(this,arguments);};}();_this.cancelTechnologyRequest=_asyncToGenerator(function*(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _options$throwOnError=options.throwOnError,throwOnError=_options$throwOnError===void 0?false:_options$throwOnError,_options$delayMsAndro=options.delayMsAndroid,delayMsAndroid=_options$delayMsAndro===void 0?1000:_options$delayMsAndro;try{yield callNative('cancelTechnologyRequest');if(_this.cleanUpTagRegistration){yield delay(delayMsAndroid);yield _this.unregisterTagEvent();_this.cleanUpTagRegistration=false;}}catch(ex){if(throwOnError){throw buildNfcExceptionAndroid(ex);}}});_this.getBackgroundTag=function(){return handleNativeException(callNative('getBackgroundTag'));};_this.clearBackgroundTag=function(){return handleNativeException(callNative('clearBackgroundTag'));};_this.isEnabled=function(){return handleNativeException(callNative('isEnabled'));};_this.goToNfcSetting=function(){return handleNativeException(callNative('goToNfcSetting'));};_this.getLaunchTagEvent=function(){return handleNativeException(callNative('getLaunchTagEvent'));};_this.setNdefPushMessage=function(bytes){return Promise.reject('this api is deprecated');};_this.setTimeout=function(timeout){return handleNativeException(callNative('setTimeout',[timeout]));};_this.connect=function(techs){return handleNativeException(callNative('connect',[techs]));};_this.close=function(){return handleNativeException(callNative('close'));};_this.transceive=function(bytes){return handleNativeException(callNative('transceive',[bytes]));};_this.getMaxTransceiveLength=function(){return handleNativeException(callNative('getMaxTransceiveLength'));};_this._hasTagEventRegistrationAndroid=function(){return handleNativeException(callNative('hasTagEventRegistration'));};_this.cleanUpTagRegistration=false;return _this;}_inherits(NfcManagerAndroid,_NfcManagerBase);return _createClass(NfcManagerAndroid,[{key:\"mifareClassicHandlerAndroid\",get:function get(){if(!this._mifareClassicHandlerAndroid){this._mifareClassicHandlerAndroid=new MifareClassicHandlerAndroid(this);}return this._mifareClassicHandlerAndroid;}},{key:\"mifareUltralightHandlerAndroid\",get:function get(){if(!this._mifareUltralightHandlerAndroid){this._mifareUltralightHandlerAndroid=new MifareUltralightHandlerAndroid(this);}return this._mifareUltralightHandlerAndroid;}},{key:\"ndefFormatableHandlerAndroid\",get:function get(){if(!this._ndefFormatableHandlerAndroid){this._ndefFormatableHandlerAndroid=new NdefFormatableHandlerAndroid(this);}return this._ndefFormatableHandlerAndroid;}}]);}(NfcManagerBase);export{NfcAdapter,NfcManagerAndroid};","map":{"version":3,"names":["callNative","NfcManagerBase","MifareClassicHandlerAndroid","MifareUltralightHandlerAndroid","NdefFormatableHandlerAndroid","handleNativeException","buildNfcExceptionAndroid","NfcAdapter","FLAG_READER_NFC_A","FLAG_READER_NFC_B","FLAG_READER_NFC_F","FLAG_READER_NFC_V","FLAG_READER_NFC_BARCODE","FLAG_READER_SKIP_NDEF_CHECK","FLAG_READER_NO_PLATFORM_SOUNDS","delay","ms","Promise","resolve","setTimeout","NfcManagerAndroid","_NfcManagerBase","_this","_classCallCheck","_callSuper","requestTechnology","_ref","_asyncToGenerator","tech","options","arguments","length","undefined","sessionAvailable","_hasTagEventRegistrationAndroid","registerTagEvent","cleanUpTagRegistration","ex","_x","apply","cancelTechnologyRequest","_options$throwOnError","throwOnError","_options$delayMsAndro","delayMsAndroid","unregisterTagEvent","getBackgroundTag","clearBackgroundTag","isEnabled","goToNfcSetting","getLaunchTagEvent","setNdefPushMessage","bytes","reject","timeout","connect","techs","close","transceive","getMaxTransceiveLength","_inherits","_createClass","key","get","_mifareClassicHandlerAndroid","_mifareUltralightHandlerAndroid","_ndefFormatableHandlerAndroid"],"sources":["C:/appdev/btcwallet/src/node_modules/react-native-nfc-manager/src/NfcManagerAndroid.js"],"sourcesContent":["import {callNative} from './NativeNfcManager';\nimport {NfcManagerBase} from './NfcManager';\nimport {MifareClassicHandlerAndroid} from './NfcTech/MifareClassicHandlerAndroid';\nimport {MifareUltralightHandlerAndroid} from './NfcTech/MifareUltralightHandlerAndroid';\nimport {NdefFormatableHandlerAndroid} from './NfcTech/NdefFormatableHandlerAndroid';\nimport {handleNativeException, buildNfcExceptionAndroid} from './NfcError';\n\nconst NfcAdapter = {\n  FLAG_READER_NFC_A: 0x1,\n  FLAG_READER_NFC_B: 0x2,\n  FLAG_READER_NFC_F: 0x4,\n  FLAG_READER_NFC_V: 0x8,\n  FLAG_READER_NFC_BARCODE: 0x10,\n  FLAG_READER_SKIP_NDEF_CHECK: 0x80,\n  FLAG_READER_NO_PLATFORM_SOUNDS: 0x100,\n};\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nclass NfcManagerAndroid extends NfcManagerBase {\n  constructor() {\n    super();\n    this.cleanUpTagRegistration = false;\n  }\n\n  requestTechnology = async (tech, options = {}) => {\n    try {\n      if (typeof tech === 'string') {\n        tech = [tech];\n      }\n\n      const sessionAvailable = await this._hasTagEventRegistrationAndroid();\n\n      // make sure we do register for tag event\n      if (!sessionAvailable) {\n        await this.registerTagEvent(options);\n        this.cleanUpTagRegistration = true;\n      }\n\n      return await callNative('requestTechnology', [tech]);\n    } catch (ex) {\n      throw buildNfcExceptionAndroid(ex);\n    }\n  };\n\n  cancelTechnologyRequest = async (options = {}) => {\n    const {throwOnError = false, delayMsAndroid = 1000} = options;\n\n    try {\n      await callNative('cancelTechnologyRequest');\n\n      if (this.cleanUpTagRegistration) {\n        await delay(delayMsAndroid);\n        await this.unregisterTagEvent();\n        this.cleanUpTagRegistration = false;\n      }\n    } catch (ex) {\n      if (throwOnError) {\n        throw buildNfcExceptionAndroid(ex);\n      }\n    }\n  };\n\n  getBackgroundTag = () =>\n    handleNativeException(callNative('getBackgroundTag'));\n\n  clearBackgroundTag = () =>\n    handleNativeException(callNative('clearBackgroundTag'));\n\n  // -------------------------------------\n  // public only for Android\n  // -------------------------------------\n  isEnabled = () => handleNativeException(callNative('isEnabled'));\n\n  goToNfcSetting = () => handleNativeException(callNative('goToNfcSetting'));\n\n  getLaunchTagEvent = () =>\n    handleNativeException(callNative('getLaunchTagEvent'));\n\n  setNdefPushMessage = (bytes) => {\n    return Promise.reject('this api is deprecated');\n  }\n\n  setTimeout = (timeout) =>\n    handleNativeException(callNative('setTimeout', [timeout]));\n\n  connect = (techs) => handleNativeException(callNative('connect', [techs]));\n\n  close = () => handleNativeException(callNative('close'));\n\n  transceive = (bytes) =>\n    handleNativeException(callNative('transceive', [bytes]));\n\n  getMaxTransceiveLength = () =>\n    handleNativeException(callNative('getMaxTransceiveLength'));\n\n  // -------------------------------------\n  // (android) NfcTech.MifareClassic API\n  // -------------------------------------\n  get mifareClassicHandlerAndroid() {\n    if (!this._mifareClassicHandlerAndroid) {\n      this._mifareClassicHandlerAndroid = new MifareClassicHandlerAndroid(this);\n    }\n    return this._mifareClassicHandlerAndroid;\n  }\n\n  // -------------------------------------\n  // (android) NfcTech.MifareUltralight API\n  // -------------------------------------\n  get mifareUltralightHandlerAndroid() {\n    if (!this._mifareUltralightHandlerAndroid) {\n      this._mifareUltralightHandlerAndroid = new MifareUltralightHandlerAndroid(\n        this,\n      );\n    }\n    return this._mifareUltralightHandlerAndroid;\n  }\n\n  // -------------------------------------\n  // (android) NfcTech.NdefFormatable API\n  // -------------------------------------\n  get ndefFormatableHandlerAndroid() {\n    if (!this._ndefFormatableHandlerAndroid) {\n      this._ndefFormatableHandlerAndroid = new NdefFormatableHandlerAndroid(this);\n    }\n    return this._ndefFormatableHandlerAndroid;\n  }\n\n  // -------------------------------------\n  // Android private\n  // -------------------------------------\n  _hasTagEventRegistrationAndroid = () =>\n    handleNativeException(callNative('hasTagEventRegistration'));\n}\n\nexport {NfcAdapter, NfcManagerAndroid};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}