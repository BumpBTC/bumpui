{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import Platform from\"react-native-web/dist/exports/Platform\";import{callNative,NativeNfcManager}from'../NativeNfcManager';import{handleNativeException}from'../NfcError';var IsoDepHandler=function(){function IsoDepHandler(){_classCallCheck(this,IsoDepHandler);}return _createClass(IsoDepHandler,[{key:\"transceive\",value:function(){var _transceive=_asyncToGenerator(function*(bytes){if(!Array.isArray(bytes)){throw new Error('IsoDepHandler.transceive only takes input as a byte array');}if(\"web\"==='ios'){return handleNativeException(new Promise(function(resolve,reject){NativeNfcManager.sendCommandAPDUBytes(bytes,function(err,response,sw1,sw2){if(err){reject(err);}else{resolve([].concat(_toConsumableArray(response),[sw1,sw2]));}});}));}return handleNativeException(callNative('transceive',[bytes]));});function transceive(_x){return _transceive.apply(this,arguments);}return transceive;}()}]);}();export{IsoDepHandler};","map":{"version":3,"names":["callNative","NativeNfcManager","handleNativeException","IsoDepHandler","_classCallCheck","_createClass","key","value","_transceive","_asyncToGenerator","bytes","Array","isArray","Error","Promise","resolve","reject","sendCommandAPDUBytes","err","response","sw1","sw2","concat","_toConsumableArray","transceive","_x","apply","arguments"],"sources":["C:/appdev/btcwallet/src/node_modules/react-native-nfc-manager/src/NfcTech/IsoDepHandler.js"],"sourcesContent":["import {Platform} from 'react-native';\nimport {callNative, NativeNfcManager} from '../NativeNfcManager';\nimport {handleNativeException} from '../NfcError';\n\nclass IsoDepHandler {\n  async transceive(bytes) {\n    if (!Array.isArray(bytes)) {\n      throw new Error(\n        'IsoDepHandler.transceive only takes input as a byte array',\n      );\n    }\n\n    if (Platform.OS === 'ios') {\n      return handleNativeException(\n        new Promise((resolve, reject) => {\n          NativeNfcManager.sendCommandAPDUBytes(\n            bytes,\n            (err, response, sw1, sw2) => {\n              if (err) {\n                reject(err);\n              } else {\n                // TODO: make following data the same format as Android\n                resolve([...response, sw1, sw2]);\n              }\n            },\n          );\n        }),\n      );\n    }\n\n    return handleNativeException(callNative('transceive', [bytes]));\n  }\n}\n\nexport {IsoDepHandler};\n"],"mappings":"6UACA,OAAQA,UAAU,CAAEC,gBAAgB,KAAO,qBAAqB,CAChE,OAAQC,qBAAqB,KAAO,aAAa,CAAC,GAE5C,CAAAC,aAAa,qBAAAA,cAAA,EAAAC,eAAA,MAAAD,aAAA,UAAAE,YAAA,CAAAF,aAAA,GAAAG,GAAA,cAAAC,KAAA,gBAAAC,WAAA,CAAAC,iBAAA,CACjB,UAAiBC,KAAK,CAAE,CACtB,GAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,CAAE,CACzB,KAAM,IAAI,CAAAG,KAAK,CACb,2DACF,CAAC,CACH,CAEA,GAAI,QAAgB,KAAK,CAAE,CACzB,MAAO,CAAAX,qBAAqB,CAC1B,GAAI,CAAAY,OAAO,CAAC,SAACC,OAAO,CAAEC,MAAM,CAAK,CAC/Bf,gBAAgB,CAACgB,oBAAoB,CACnCP,KAAK,CACL,SAACQ,GAAG,CAAEC,QAAQ,CAAEC,GAAG,CAAEC,GAAG,CAAK,CAC3B,GAAIH,GAAG,CAAE,CACPF,MAAM,CAACE,GAAG,CAAC,CACb,CAAC,IAAM,CAELH,OAAO,IAAAO,MAAA,CAAAC,kBAAA,CAAKJ,QAAQ,GAAEC,GAAG,CAAEC,GAAG,EAAC,CAAC,CAClC,CACF,CACF,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAEA,MAAO,CAAAnB,qBAAqB,CAACF,UAAU,CAAC,YAAY,CAAE,CAACU,KAAK,CAAC,CAAC,CAAC,CACjE,CAAC,UA1BK,CAAAc,UAAUA,CAAAC,EAAA,SAAAjB,WAAA,CAAAkB,KAAA,MAAAC,SAAA,SAAV,CAAAH,UAAU,YA6BlB,OAAQrB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}