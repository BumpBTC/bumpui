{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Alert from\"react-native-web/dist/exports/Alert\";import{useTheme}from'../contexts/ThemeContext';import{WalletContext}from'../contexts/WalletContext';import Button from'../components/Button';import*as Animatable from'react-native-animatable';import{LinearGradient}from'expo-linear-gradient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var CreateWalletScreen=function CreateWalletScreen(_ref){var route=_ref.route,navigation=_ref.navigation;var _useTheme=useTheme(),colors=_useTheme.colors;var _useContext=useContext(WalletContext),createWallet=_useContext.createWallet,fetchWalletData=_useContext.fetchWalletData;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var handleCreateWallet=function(){var _ref2=_asyncToGenerator(function*(){setIsLoading(true);try{yield createWallet();yield fetchWalletData();Alert.alert('Success',` wallet created successfully!`);navigation.goBack();}catch(error){console.error('Error creating wallet:',error);Alert.alert('Error',`Failed to create wallet. Please try again.`);}finally{setIsLoading(false);}});return function handleCreateWallet(){return _ref2.apply(this,arguments);};}();return _jsx(LinearGradient,{colors:[colors.background,colors.primary+'22'],style:styles.container,children:_jsxs(Animatable.View,{animation:\"fadeIn\",style:styles.content,children:[_jsx(Text,{style:[styles.title,{color:colors.text}],children:\"Create Wallet\"}),_jsx(Text,{style:[styles.description,{color:colors.text}],children:\"You are about to create a new wallet. This will generate a new address and private key for you.\"}),_jsx(Button,{title:`Create Wallet`,onPress:handleCreateWallet,loading:isLoading,style:styles.button})]})});};var styles=StyleSheet.create({container:{flex:1},content:{flex:1,justifyContent:'center',alignItems:'center',padding:20},title:{fontSize:24,fontWeight:'bold',marginBottom:20,textAlign:'center'},description:{fontSize:16,textAlign:'center',marginBottom:30},button:{width:'100%'}});export default CreateWalletScreen;","map":{"version":3,"names":["React","useState","useContext","View","Text","StyleSheet","Alert","useTheme","WalletContext","Button","Animatable","LinearGradient","jsx","_jsx","jsxs","_jsxs","CreateWalletScreen","_ref","route","navigation","_useTheme","colors","_useContext","createWallet","fetchWalletData","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","handleCreateWallet","_ref2","_asyncToGenerator","alert","goBack","error","console","apply","arguments","background","primary","style","styles","container","children","animation","content","title","color","text","description","onPress","loading","button","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","textAlign","width"],"sources":["C:/appdev/btcwallet/src/screens/CreateWalletScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, Text, StyleSheet, Alert } from 'react-native';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport { WalletContext } from '../contexts/WalletContext';\r\nimport Button from '../components/Button';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nconst CreateWalletScreen = ({ route, navigation }) => {\r\n  const { colors } = useTheme();\r\n  const { createWallet, fetchWalletData } = useContext(WalletContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n//   const { walletType } = route.params;\r\n\r\n  const handleCreateWallet = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      await createWallet();\r\n      await fetchWalletData();\r\n      Alert.alert('Success', ` wallet created successfully!`);\r\n      navigation.goBack();\r\n    } catch (error) {\r\n      console.error('Error creating wallet:', error);\r\n      Alert.alert('Error', `Failed to create wallet. Please try again.`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LinearGradient colors={[colors.background, colors.primary + '22']} style={styles.container}>\r\n      <Animatable.View animation=\"fadeIn\" style={styles.content}>\r\n        <Text style={[styles.title, { color: colors.text }]}>Create Wallet</Text>\r\n        <Text style={[styles.description, { color: colors.text }]}>\r\n          You are about to create a new wallet. This will generate a new address and private key for you.\r\n        </Text>\r\n        <Button\r\n          title={`Create Wallet`}\r\n          onPress={handleCreateWallet}\r\n          loading={isLoading}\r\n          style={styles.button}\r\n        />\r\n      </Animatable.View>\r\n    </LinearGradient>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  description: {\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    marginBottom: 30,\r\n  },\r\n  button: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default CreateWalletScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}