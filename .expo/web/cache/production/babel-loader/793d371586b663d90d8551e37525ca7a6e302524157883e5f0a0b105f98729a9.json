{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{Buffer}from\"buffer\";global.Buffer=global.Buffer||Buffer;import React,{createContext,useState,useEffect,useCallback}from\"react\";import AsyncStorage from'@react-native-async-storage/async-storage';import api from\"../services/api\";import{getWalletInfo}from\"../services/api\";import{removeToken}from\"../services/auth\";import{getToken}from\"../services/auth\";import*as bip39 from\"bip39\";import*as bip32 from\"bip32\";import{jsx as _jsx}from\"react/jsx-runtime\";export var WalletContext=createContext();export var WalletProvider=function WalletProvider(_ref){var children=_ref.children;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),wallet=_useState4[0],setWallet=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),wallets=_useState6[0],setWallets=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),transactions=_useState8[0],setTransactions=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isLoading=_useState10[0],setIsLoading=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),error=_useState12[0],setError=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),balance=_useState14[0],setBalance=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),address=_useState16[0],setAddress=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),btcAddress=_useState18[0],setBtcAddress=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),ltcAddress=_useState20[0],setLtcAddress=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),taprootAddress=_useState22[0],setTaprootAddress=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),mnemonic=_useState24[0],setMnemonic=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),enableTaproot=_useState26[0],setEnableTaproot=_useState26[1];var _useState27=useState(0),_useState28=_slicedToArray(_useState27,2),securityLevel=_useState28[0],setSecurityLevel=_useState28[1];var _useState29=useState(0),_useState30=_slicedToArray(_useState29,2),securityScore=_useState30[0],setSecurityScore=_useState30[1];var _useState31=useState(0),_useState32=_slicedToArray(_useState31,2),channelCreationProgress=_useState32[0],setChannelCreationProgress=_useState32[1];var _useState33=useState({}),_useState34=_slicedToArray(_useState33,2),exchangeRates=_useState34[0],setExchangeRates=_useState34[1];var _useState35=useState(\"bitcoin\"),_useState36=_slicedToArray(_useState35,2),selectedCrypto=_useState36[0],setSelectedCrypto=_useState36[1];var checkLoginStatus=useCallback(_asyncToGenerator(function*(){var token=yield AsyncStorage.getItem('userToken');setIsLoggedIn(!!token);}),[]);var fetchWalletData=useCallback(_asyncToGenerator(function*(){if(isLoggedIn){try{setIsLoading(true);setError(null);var data=yield getWalletInfo();setWallets(data.wallets||[]);setTransactions(data.transactions||[]);setSelectedCrypto(data.activeWallet||null);}catch(error){var _error$response,_error$response$data;console.error(\"Failed to fetch wallet data:\",error);setError(((_error$response=error.response)==null?void 0:(_error$response$data=_error$response.data)==null?void 0:_error$response$data.error)||\"Failed to fetch wallet data. Please try again.\");}finally{setIsLoading(false);}}}),[isLoggedIn]);var login=function(){var _ref4=_asyncToGenerator(function*(token){yield AsyncStorage.setItem('userToken',token);api.defaults.headers.common['Authorization']=`Bearer ${token}`;setIsLoggedIn(true);fetchWalletData();});return function login(_x){return _ref4.apply(this,arguments);};}();var fetchWalletInfo=useCallback(_asyncToGenerator(function*(){try{setIsLoading(true);var response=yield api.get(\"/wallet/info\");setWallets(response.data.wallets);setTransactions(response.data.transactions);setIsLoading(false);}catch(error){var _error$response2,_error$response2$data;console.error(\"Failed to fetch wallet info:\",error);setError(((_error$response2=error.response)==null?void 0:(_error$response2$data=_error$response2.data)==null?void 0:_error$response2$data.error)||\"Failed to fetch wallet info\");setIsLoading(false);}}),[]);var fetchExchangeRates=useCallback(_asyncToGenerator(function*(){try{var response=yield api.get(\"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,litecoin&vs_currencies=usd\");setExchangeRates(response.data);}catch(error){console.error(\"Failed to fetch exchange rates:\",error);}}),[]);var logout=function(){var _ref7=_asyncToGenerator(function*(){try{yield AsyncStorage.removeItem('userToken');delete api.defaults.headers.common['Authorization'];yield removeToken();setIsLoggedIn(false);setWallets([]);setTransactions([]);setError(null);}catch(error){console.error(\"Failed to logout:\",error);}});return function logout(){return _ref7.apply(this,arguments);};}();var setActiveWallet=function(){var _ref8=_asyncToGenerator(function*(type,walletId){try{var response=yield api.post('/wallet/set-active',{type:type,walletId:walletId});yield fetchWalletData();return response.data;}catch(error){console.error('Failed to set active wallet:',error);throw error;}});return function setActiveWallet(_x2,_x3){return _ref8.apply(this,arguments);};}();useEffect(function(){checkLoginStatus();fetchWalletData();fetchExchangeRates();calculateSecurityScore(securityLevel);var interval=setInterval(fetchExchangeRates,300000);return function(){return clearInterval(interval);};},[fetchWalletData,fetchExchangeRates]);var convertAmount=useCallback(function(amount,fromCurrency,toCurrency){if(fromCurrency===toCurrency)return amount;if(fromCurrency===\"USD\"){if(toCurrency===\"lightning\"){return amount*100000000/exchangeRates.bitcoin;}return amount/exchangeRates[toCurrency];}if(toCurrency===\"USD\"){if(fromCurrency===\"lightning\"){return amount*exchangeRates.bitcoin/100000000;}return amount*exchangeRates[fromCurrency];}var usdAmount=convertAmount(amount,fromCurrency,\"USD\");return convertAmount(usdAmount,\"USD\",toCurrency);},[exchangeRates]);var createWallet=function(){var _ref9=_asyncToGenerator(function*(type){try{setIsLoading(true);var response=yield api.post('/wallet/create',{type:'bitcoin'});setWallet(response.data.wallet);yield fetchWalletData();yield setActiveWallet(type,response.data.wallet.id);setIsLoading(false);return response.data;}catch(error){console.error('Failed to create wallet:',error);throw error;}});return function createWallet(_x4){return _ref9.apply(this,arguments);};}();var sendBitcoin=function(){var _ref10=_asyncToGenerator(function*(toAddress,amount){try{setIsLoading(true);var response=yield api.post(\"/wallet/send-bitcoin\",{toAddress:toAddress,amount:amount});yield fetchWalletInfo();setIsLoading(false);return response.data;}catch(error){var _error$response3,_error$response3$data;console.error(\"Failed to send Bitcoin:\",error);setError(((_error$response3=error.response)==null?void 0:(_error$response3$data=_error$response3.data)==null?void 0:_error$response3$data.error)||\"Failed to send Bitcoin\");setIsLoading(false);throw error;}});return function sendBitcoin(_x5,_x6){return _ref10.apply(this,arguments);};}();var sendLightning=function(){var _ref11=_asyncToGenerator(function*(paymentRequest){try{var response=yield api.post(\"/wallet/send-lightning\",{paymentRequest:paymentRequest});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to send Lightning payment:\",error);throw error;}});return function sendLightning(_x7){return _ref11.apply(this,arguments);};}();var sendTransaction=useCallback(function(){var _ref12=_asyncToGenerator(function*(paymentType,toAddress,amount){try{var response=yield api.post(`/wallet/send-${paymentType}`,{toAddress:toAddress,amount:parseFloat(amount)});yield fetchWalletData();return response.data;}catch(error){console.error(`Failed to send ${paymentType}:`,error);throw error;}});return function(_x8,_x9,_x10){return _ref12.apply(this,arguments);};}(),[fetchWalletData]);var payLightningInvoice=function(){var _ref13=_asyncToGenerator(function*(paymentRequest){try{var response=yield api.post(\"/lightning/pay-invoice\",{paymentRequest:paymentRequest});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to pay Lightning invoice:\",error);throw error;}});return function payLightningInvoice(_x11){return _ref13.apply(this,arguments);};}();var createLightningWallet=function(){var _ref14=_asyncToGenerator(function*(){try{var response=yield api.post(\"/lightning/create-wallet\");yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to create Lightning wallet:\",error);throw error;}});return function createLightningWallet(){return _ref14.apply(this,arguments);};}();var createLightningChannel=function(){var _ref15=_asyncToGenerator(function*(nodeUri,amount){try{var response=yield api.post(\"/lightning/create-channel\",{nodeUri:nodeUri,amount:amount,channelName:channelName});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to create Lightning channel:\",error);throw error;}});return function createLightningChannel(_x12,_x13){return _ref15.apply(this,arguments);};}();var getChannelConfigurations=function(){var _ref16=_asyncToGenerator(function*(){try{var response=yield api.get(\"/lightning/channel-configurations\");return response.data;}catch(error){console.error(\"Failed to get channel configurations:\",error);throw error;}});return function getChannelConfigurations(){return _ref16.apply(this,arguments);};}();var updateChannelConfiguration=function(){var _ref17=_asyncToGenerator(function*(configId,updates){try{var response=yield api.put(`/lightning/channel-configurations/${configId}`,updates);yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to update channel configuration:\",error);throw error;}});return function updateChannelConfiguration(_x14,_x15){return _ref17.apply(this,arguments);};}();var deleteChannelConfiguration=function(){var _ref18=_asyncToGenerator(function*(configId){try{yield api.delete(`/lightning/channel-configurations/${configId}`);yield fetchWalletData();}catch(error){console.error(\"Failed to delete channel configuration:\",error);throw error;}});return function deleteChannelConfiguration(_x16){return _ref18.apply(this,arguments);};}();var importLightningWallet=function(){var _ref19=_asyncToGenerator(function*(mnemonic){try{var response=yield api.post(\"/lightning/import-wallet\",{mnemonic:mnemonic});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to import Lightning wallet:\",error);throw error;}});return function importLightningWallet(_x17){return _ref19.apply(this,arguments);};}();var createLightningInvoice=function(){var _ref20=_asyncToGenerator(function*(amount,memo){try{var response=yield api.post(\"/lightning/create-invoice\",{amount:amount,memo:memo});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to create Lightning invoice:\",error);throw error;}});return function createLightningInvoice(_x18,_x19){return _ref20.apply(this,arguments);};}();var openLightningChannel=function(){var _ref21=_asyncToGenerator(function*(nodeUri,amount){try{var response=yield api.post(\"/lightning/open-channel\",{nodeUri:nodeUri,amount:amount});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to open Lightning channel:\",error);throw error;}});return function openLightningChannel(_x20,_x21){return _ref21.apply(this,arguments);};}();var closeLightningChannel=function(){var _ref22=_asyncToGenerator(function*(channelId){try{var response=yield api.post(\"/lightning/close-channel\",{channelId:channelId});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to close Lightning channel:\",error);throw error;}});return function closeLightningChannel(_x22){return _ref22.apply(this,arguments);};}();var importWallet=function(){var _ref23=_asyncToGenerator(function*(mnemonic,type){try{var response=yield api.post(\"/wallet/import\",{mnemonic:mnemonic,type:type});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to import wallet:\",error);throw error;}});return function importWallet(_x23,_x24){return _ref23.apply(this,arguments);};}();var updateSecurityLevel=function(){var _ref24=_asyncToGenerator(function*(level){try{var response=yield api.post(\"/wallet/update-security\",{level:level});setSecurityLevel(level);calculateSecurityScore(level);return response.data;}catch(error){console.error(\"Failed to update security level:\",error);throw error;}});return function updateSecurityLevel(_x25){return _ref24.apply(this,arguments);};}();var calculateSecurityScore=function calculateSecurityScore(level){var securityOptions=[{level:1,score:100},{level:2,score:100},{level:3,score:100},{level:4,score:150},{level:5,score:150},{level:6,score:200},{level:7,score:200}];var score=securityOptions.reduce(function(total,option){return total+(level>=option.level?option.score:0);},0);setSecurityScore(score);};var getLightningBalance=function(){var _ref25=_asyncToGenerator(function*(){try{var response=yield api.get(\"/lightning/balance\");return response.data.balance;}catch(error){console.error(\"Failed to get Lightning balance:\",error);throw error;}});return function getLightningBalance(){return _ref25.apply(this,arguments);};}();var getLightningTransactionHistory=function(){var _ref26=_asyncToGenerator(function*(){try{var response=yield api.get(\"/lightning/transaction-history\");return response.data;}catch(error){console.error(\"Failed to get Lightning transaction history:\",error);throw error;}});return function getLightningTransactionHistory(){return _ref26.apply(this,arguments);};}();var getTransactionHistory=function(){var _ref27=_asyncToGenerator(function*(type){try{var response=yield api.get(`/wallet/transaction-history/${type}`);return response.data;}catch(error){console.error(\"Failed to get transaction history:\",error);throw error;}});return function getTransactionHistory(_x26){return _ref27.apply(this,arguments);};}();var createNfcChannel=function(){var _ref28=_asyncToGenerator(function*(){try{var response=yield api.post(\"/lightning/create-nfc-channel\");return response.data;}catch(error){console.error(\"Failed to create NFC channel:\",error);throw error;}});return function createNfcChannel(){return _ref28.apply(this,arguments);};}();var getNfcChannelBalance=function(){var _ref29=_asyncToGenerator(function*(){try{var response=yield api.get(\"/lightning/nfc-channel-balance\");return response.data.balance;}catch(error){console.error(\"Failed to get NFC channel balance:\",error);throw error;}});return function getNfcChannelBalance(){return _ref29.apply(this,arguments);};}();var createNfcInvoice=function(){var _ref30=_asyncToGenerator(function*(amount,description){try{var response=yield api.post(\"/lightning/create-nfc-invoice\",{amount:amount,description:description});return response.data;}catch(error){console.error(\"Failed to create NFC invoice:\",error);throw error;}});return function createNfcInvoice(_x27,_x28){return _ref30.apply(this,arguments);};}();var payNfcInvoice=function(){var _ref31=_asyncToGenerator(function*(paymentRequest){try{var response=yield api.post(\"/lightning/pay-nfc-invoice\",{paymentRequest:paymentRequest});return response.data;}catch(error){console.error(\"Failed to pay NFC invoice:\",error);throw error;}});return function payNfcInvoice(_x29){return _ref31.apply(this,arguments);};}();var backupWallet=function(){var _ref32=_asyncToGenerator(function*(){try{var response=yield api.get(\"/wallet/backup\");return response.data;}catch(error){console.error(\"Failed to backup wallet:\",error);throw error;}});return function backupWallet(){return _ref32.apply(this,arguments);};}();var restoreWallet=function(){var _ref33=_asyncToGenerator(function*(backupData){try{var response=yield api.post(\"/wallet/restore\",{backupData:backupData});yield fetchWalletData();return response.data;}catch(error){console.error(\"Failed to restore wallet:\",error);throw error;}});return function restoreWallet(_x30){return _ref33.apply(this,arguments);};}();return _jsx(WalletContext.Provider,{value:{wallet:wallet,wallets:wallets,setWallets:setWallets,transactions:transactions,isLoading:isLoading,isLoggedIn:isLoggedIn,setIsLoggedIn:setIsLoggedIn,error:error,fetchWalletData:fetchWalletData,sendBitcoin:sendBitcoin,sendTransaction:sendTransaction,sendLightning:sendLightning,createWallet:createWallet,setActiveWallet:setActiveWallet,createLightningWallet:createLightningWallet,createLightningChannel:createLightningChannel,importLightningWallet:importLightningWallet,payLightningInvoice:payLightningInvoice,createLightningInvoice:createLightningInvoice,payLightningInvoice:payLightningInvoice,openLightningChannel:openLightningChannel,closeLightningChannel:closeLightningChannel,getLightningBalance:getLightningBalance,getLightningTransactionHistory:getLightningTransactionHistory,getChannelConfigurations:getChannelConfigurations,updateChannelConfiguration:updateChannelConfiguration,deleteChannelConfiguration:deleteChannelConfiguration,channelCreationProgress:channelCreationProgress,selectedCrypto:selectedCrypto,setSelectedCrypto:setSelectedCrypto,fetchWalletInfo:fetchWalletInfo,balance:balance,login:login,logout:logout,checkLoginStatus:checkLoginStatus,btcAddress:btcAddress,ltcAddress:ltcAddress,taprootAddress:taprootAddress,mnemonic:mnemonic,enableTaproot:enableTaproot,setEnableTaproot:setEnableTaproot,importWallet:importWallet,securityLevel:securityLevel,updateSecurityLevel:updateSecurityLevel,securityScore:securityScore,getTransactionHistory:getTransactionHistory,convertAmount:convertAmount,exchangeRates:exchangeRates,createNfcChannel:createNfcChannel,getNfcChannelBalance:getNfcChannelBalance,createNfcInvoice:createNfcInvoice,payNfcInvoice:payNfcInvoice,backupWallet:backupWallet,restoreWallet:restoreWallet},children:children});};","map":{"version":3,"names":["Buffer","global","React","createContext","useState","useEffect","useCallback","AsyncStorage","api","getWalletInfo","removeToken","getToken","bip39","bip32","jsx","_jsx","WalletContext","WalletProvider","_ref","children","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","wallet","setWallet","_useState5","_useState6","wallets","setWallets","_useState7","_useState8","transactions","setTransactions","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","error","setError","_useState13","_useState14","balance","setBalance","_useState15","_useState16","address","setAddress","_useState17","_useState18","btcAddress","setBtcAddress","_useState19","_useState20","ltcAddress","setLtcAddress","_useState21","_useState22","taprootAddress","setTaprootAddress","_useState23","_useState24","mnemonic","setMnemonic","_useState25","_useState26","enableTaproot","setEnableTaproot","_useState27","_useState28","securityLevel","setSecurityLevel","_useState29","_useState30","securityScore","setSecurityScore","_useState31","_useState32","channelCreationProgress","setChannelCreationProgress","_useState33","_useState34","exchangeRates","setExchangeRates","_useState35","_useState36","selectedCrypto","setSelectedCrypto","checkLoginStatus","_asyncToGenerator","token","getItem","fetchWalletData","data","activeWallet","_error$response","_error$response$data","console","response","login","_ref4","setItem","defaults","headers","common","_x","apply","arguments","fetchWalletInfo","get","_error$response2","_error$response2$data","fetchExchangeRates","logout","_ref7","removeItem","setActiveWallet","_ref8","type","walletId","post","_x2","_x3","calculateSecurityScore","interval","setInterval","clearInterval","convertAmount","amount","fromCurrency","toCurrency","bitcoin","usdAmount","createWallet","_ref9","id","_x4","sendBitcoin","_ref10","toAddress","_error$response3","_error$response3$data","_x5","_x6","sendLightning","_ref11","paymentRequest","_x7","sendTransaction","_ref12","paymentType","parseFloat","_x8","_x9","_x10","payLightningInvoice","_ref13","_x11","createLightningWallet","_ref14","createLightningChannel","_ref15","nodeUri","channelName","_x12","_x13","getChannelConfigurations","_ref16","updateChannelConfiguration","_ref17","configId","updates","put","_x14","_x15","deleteChannelConfiguration","_ref18","delete","_x16","importLightningWallet","_ref19","_x17","createLightningInvoice","_ref20","memo","_x18","_x19","openLightningChannel","_ref21","_x20","_x21","closeLightningChannel","_ref22","channelId","_x22","importWallet","_ref23","_x23","_x24","updateSecurityLevel","_ref24","level","_x25","securityOptions","score","reduce","total","option","getLightningBalance","_ref25","getLightningTransactionHistory","_ref26","getTransactionHistory","_ref27","_x26","createNfcChannel","_ref28","getNfcChannelBalance","_ref29","createNfcInvoice","_ref30","description","_x27","_x28","payNfcInvoice","_ref31","_x29","backupWallet","_ref32","restoreWallet","_ref33","backupData","_x30","Provider","value"],"sources":["C:/appdev/btcwallet/src/contexts/WalletContext.js"],"sourcesContent":["import { Buffer } from \"buffer\";\r\nglobal.Buffer = global.Buffer || Buffer;\r\n\r\nimport React, { createContext, useState, useEffect, useCallback } from \"react\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport api from \"../services/api\";\r\nimport { getWalletInfo } from \"../services/api\";\r\nimport { removeToken } from \"../services/auth\";\r\nimport { getToken } from \"../services/auth\";\r\nimport * as bip39 from \"bip39\";\r\n// import * as bitcoin from 'bitcoinjs-lib';\r\nimport * as bip32 from \"bip32\";\r\n\r\nexport const WalletContext = createContext();\r\n\r\nexport const WalletProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [wallet, setWallet] = useState(null);\r\n  const [wallets, setWallets] = useState([]);\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [balance, setBalance] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [btcAddress, setBtcAddress] = useState(\"\");\r\n  const [ltcAddress, setLtcAddress] = useState(\"\");\r\n  const [taprootAddress, setTaprootAddress] = useState(\"\");\r\n  const [mnemonic, setMnemonic] = useState(\"\");\r\n  const [enableTaproot, setEnableTaproot] = useState(false);\r\n  const [securityLevel, setSecurityLevel] = useState(0);\r\n  const [securityScore, setSecurityScore] = useState(0);\r\n  const [channelCreationProgress, setChannelCreationProgress] = useState(0);\r\n  const [exchangeRates, setExchangeRates] = useState({});\r\n  const [selectedCrypto, setSelectedCrypto] = useState(\"bitcoin\");\r\n\r\n  const checkLoginStatus = useCallback(async () => {\r\n    const token = await AsyncStorage.getItem('userToken');\r\n    setIsLoggedIn(!!token);\r\n  }, []);\r\n\r\n  const fetchWalletData = useCallback(async () => {\r\n    if (isLoggedIn) {\r\n      try {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        const data = await getWalletInfo();\r\n        setWallets(data.wallets || []);\r\n        setTransactions(data.transactions || []);\r\n        setSelectedCrypto(data.activeWallet || null);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch wallet data:\", error);\r\n        setError(error.response?.data?.error || \"Failed to fetch wallet data. Please try again.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const login = async (token) => {\r\n    await AsyncStorage.setItem('userToken', token);\r\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    setIsLoggedIn(true);\r\n    fetchWalletData();\r\n  };\r\n\r\n\r\n  const fetchWalletInfo = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await api.get(\"/wallet/info\");\r\n      setWallets(response.data.wallets);\r\n      setTransactions(response.data.transactions);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch wallet info:\", error);\r\n      setError(error.response?.data?.error || \"Failed to fetch wallet info\");\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchExchangeRates = useCallback(async () => {\r\n    try {\r\n      const response = await api.get(\r\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,litecoin&vs_currencies=usd\"\r\n      );\r\n      setExchangeRates(response.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch exchange rates:\", error);\r\n    }\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await AsyncStorage.removeItem('userToken');\r\n      delete api.defaults.headers.common['Authorization'];\r\n      await removeToken();\r\n      setIsLoggedIn(false);\r\n      setWallets([]);\r\n      setTransactions([]);\r\n      setError(null);\r\n      // You might want to reset other state variables here\r\n    } catch (error) {\r\n      console.error(\"Failed to logout:\", error);\r\n    }\r\n  };\r\n\r\n  const setActiveWallet = async (type, walletId) => {\r\n    try {\r\n      const response = await api.post('/wallet/set-active', { type, walletId });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Failed to set active wallet:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkLoginStatus();\r\n    fetchWalletData();\r\n    // generateAddresses();\r\n    fetchExchangeRates();\r\n    calculateSecurityScore(securityLevel);\r\n    const interval = setInterval(fetchExchangeRates, 300000); // Update every 5 minutes\r\n    return () => clearInterval(interval);\r\n  }, [fetchWalletData, fetchExchangeRates]);\r\n\r\n  const convertAmount = useCallback(\r\n    (amount, fromCurrency, toCurrency) => {\r\n      if (fromCurrency === toCurrency) return amount;\r\n      if (fromCurrency === \"USD\") {\r\n        if (toCurrency === \"lightning\") {\r\n          return (amount * 100000000) / exchangeRates.bitcoin; // Convert to sats\r\n        }\r\n        return amount / exchangeRates[toCurrency];\r\n      }\r\n      if (toCurrency === \"USD\") {\r\n        if (fromCurrency === \"lightning\") {\r\n          return (amount * exchangeRates.bitcoin) / 100000000; // Convert from sats\r\n        }\r\n        return amount * exchangeRates[fromCurrency];\r\n      }\r\n      // Convert between cryptocurrencies\r\n      const usdAmount = convertAmount(amount, fromCurrency, \"USD\");\r\n      return convertAmount(usdAmount, \"USD\", toCurrency);\r\n    },\r\n    [exchangeRates]\r\n  );\r\n\r\n  const createWallet = async (type) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await api.post('/wallet/create', { type: 'bitcoin' });\r\n      setWallet(response.data.wallet);\r\n      await fetchWalletData();\r\n      // Automatically set the new wallet as active\r\n      await setActiveWallet(type, response.data.wallet.id);\r\n      setIsLoading(false);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Failed to create wallet:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // const generateAddresses = useCallback(async () => {\r\n  //   try {\r\n  //     const response = await api.post(\"/wallet/generate-addresses\");\r\n  //     setBtcAddress(response.data.btcAddress);\r\n  //     setLtcAddress(response.data.ltcAddress);\r\n  //     setTaprootAddress(response.data.taprootAddress);\r\n  //     setMnemonic(response.data.mnemonic);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error generating addresses:\", error);\r\n  //   }\r\n  // }, []);\r\n\r\n  const sendBitcoin = async (toAddress, amount) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await api.post(\"/wallet/send-bitcoin\", {\r\n        toAddress,\r\n        amount,\r\n      });\r\n      await fetchWalletInfo(); // Refresh wallet info after sending\r\n      setIsLoading(false);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to send Bitcoin:\", error);\r\n      setError(error.response?.data?.error || \"Failed to send Bitcoin\");\r\n      setIsLoading(false);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const sendLightning = async (paymentRequest) => {\r\n    try {\r\n      const response = await api.post(\"/wallet/send-lightning\", {\r\n        paymentRequest,\r\n      });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to send Lightning payment:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const sendTransaction = useCallback(\r\n    async (paymentType, toAddress, amount) => {\r\n      try {\r\n        const response = await api.post(`/wallet/send-${paymentType}`, {\r\n          toAddress,\r\n          amount: parseFloat(amount),\r\n        });\r\n        await fetchWalletData();\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error(`Failed to send ${paymentType}:`, error);\r\n        throw error;\r\n      }\r\n    },\r\n    [fetchWalletData]\r\n  );\r\n\r\n  const payLightningInvoice = async (paymentRequest) => {\r\n    try {\r\n      const response = await api.post(\"/lightning/pay-invoice\", {\r\n        paymentRequest,\r\n      });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to pay Lightning invoice:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createLightningWallet = async () => {\r\n    try {\r\n      const response = await api.post(\"/lightning/create-wallet\");\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to create Lightning wallet:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createLightningChannel = async (nodeUri, amount) => {\r\n    try {\r\n      const response = await api.post(\"/lightning/create-channel\", {\r\n        nodeUri,\r\n        amount,\r\n        channelName,\r\n      });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to create Lightning channel:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getChannelConfigurations = async () => {\r\n    try {\r\n      const response = await api.get(\"/lightning/channel-configurations\");\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to get channel configurations:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateChannelConfiguration = async (configId, updates) => {\r\n    try {\r\n      const response = await api.put(\r\n        `/lightning/channel-configurations/${configId}`,\r\n        updates\r\n      );\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to update channel configuration:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const deleteChannelConfiguration = async (configId) => {\r\n    try {\r\n      await api.delete(`/lightning/channel-configurations/${configId}`);\r\n      await fetchWalletData();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete channel configuration:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const importLightningWallet = async (mnemonic) => {\r\n    try {\r\n      const response = await api.post(\"/lightning/import-wallet\", { mnemonic });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to import Lightning wallet:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createLightningInvoice = async (amount, memo) => {\r\n    try {\r\n      const response = await api.post(\"/lightning/create-invoice\", {\r\n        amount,\r\n        memo,\r\n      });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to create Lightning invoice:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const openLightningChannel = async (nodeUri, amount) => {\r\n    try {\r\n      const response = await api.post(\"/lightning/open-channel\", {\r\n        nodeUri,\r\n        amount,\r\n      });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to open Lightning channel:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const closeLightningChannel = async (channelId) => {\r\n    try {\r\n      const response = await api.post(\"/lightning/close-channel\", {\r\n        channelId,\r\n      });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to close Lightning channel:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const importWallet = async (mnemonic, type) => {\r\n    try {\r\n      const response = await api.post(\"/wallet/import\", { mnemonic, type });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to import wallet:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateSecurityLevel = async (level) => {\r\n    try {\r\n      const response = await api.post(\"/wallet/update-security\", { level });\r\n      setSecurityLevel(level);\r\n      calculateSecurityScore(level);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to update security level:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const calculateSecurityScore = (level) => {\r\n    const securityOptions = [\r\n      { level: 1, score: 100 },\r\n      { level: 2, score: 100 },\r\n      { level: 3, score: 100 },\r\n      { level: 4, score: 150 },\r\n      { level: 5, score: 150 },\r\n      { level: 6, score: 200 },\r\n      { level: 7, score: 200 },\r\n    ];\r\n\r\n    const score = securityOptions.reduce((total, option) => {\r\n      return total + (level >= option.level ? option.score : 0);\r\n    }, 0);\r\n\r\n    setSecurityScore(score);\r\n  };\r\n\r\n  const getLightningBalance = async () => {\r\n    try {\r\n      const response = await api.get(\"/lightning/balance\");\r\n      return response.data.balance;\r\n    } catch (error) {\r\n      console.error(\"Failed to get Lightning balance:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getLightningTransactionHistory = async () => {\r\n    try {\r\n      const response = await api.get(\"/lightning/transaction-history\");\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to get Lightning transaction history:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getTransactionHistory = async (type) => {\r\n    try {\r\n      const response = await api.get(`/wallet/transaction-history/${type}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to get transaction history:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createNfcChannel = async () => {\r\n    try {\r\n      const response = await api.post(\"/lightning/create-nfc-channel\");\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to create NFC channel:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const getNfcChannelBalance = async () => {\r\n    try {\r\n      const response = await api.get(\"/lightning/nfc-channel-balance\");\r\n      return response.data.balance;\r\n    } catch (error) {\r\n      console.error(\"Failed to get NFC channel balance:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const createNfcInvoice = async (amount, description) => {\r\n    try {\r\n      const response = await api.post(\"/lightning/create-nfc-invoice\", { amount, description });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to create NFC invoice:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const payNfcInvoice = async (paymentRequest) => {\r\n    try {\r\n      const response = await api.post(\"/lightning/pay-nfc-invoice\", { paymentRequest });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to pay NFC invoice:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n\r\n  const backupWallet = async () => {\r\n    try {\r\n      const response = await api.get(\"/wallet/backup\");\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to backup wallet:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const restoreWallet = async (backupData) => {\r\n    try {\r\n      const response = await api.post(\"/wallet/restore\", { backupData });\r\n      await fetchWalletData();\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Failed to restore wallet:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WalletContext.Provider\r\n      value={{\r\n        wallet,\r\n        wallets,\r\n        setWallets,\r\n        transactions,\r\n        isLoading,\r\n        isLoggedIn,\r\n        setIsLoggedIn,\r\n        error,\r\n        fetchWalletData,\r\n        sendBitcoin,\r\n        sendTransaction,\r\n        sendLightning,\r\n        createWallet,\r\n        setActiveWallet,\r\n        createLightningWallet,\r\n        createLightningChannel,\r\n        importLightningWallet,\r\n        payLightningInvoice,\r\n        createLightningInvoice,\r\n        payLightningInvoice,\r\n        openLightningChannel,\r\n        closeLightningChannel,\r\n        getLightningBalance,\r\n        getLightningTransactionHistory,\r\n        getChannelConfigurations,\r\n        updateChannelConfiguration,\r\n        deleteChannelConfiguration,\r\n        channelCreationProgress,\r\n        selectedCrypto,\r\n        setSelectedCrypto,\r\n        fetchWalletInfo,\r\n        balance,\r\n        login,\r\n        logout,\r\n        checkLoginStatus,\r\n        // generateAddresses,\r\n        btcAddress,\r\n        ltcAddress,\r\n        taprootAddress,\r\n        mnemonic,\r\n        enableTaproot,\r\n        setEnableTaproot,\r\n        importWallet,\r\n        securityLevel,\r\n        updateSecurityLevel,\r\n        securityScore,\r\n        getTransactionHistory,\r\n        convertAmount,\r\n        exchangeRates,\r\n        createNfcChannel,\r\n        getNfcChannelBalance,\r\n        createNfcInvoice,\r\n        payNfcInvoice,\r\n        backupWallet,\r\n        restoreWallet,\r\n      }}\r\n    >\r\n      {children}\r\n    </WalletContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}