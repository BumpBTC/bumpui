{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"navigation\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{getHeaderTitle,Header,SafeAreaProviderCompat,Screen}from'@react-navigation/elements';import{DrawerActions,useTheme}from'@react-navigation/native';import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import*as Reanimated from'react-native-reanimated';import{useSafeAreaFrame}from'react-native-safe-area-context';import{addCancelListener}from'../utils/addCancelListener';import DrawerPositionContext from'../utils/DrawerPositionContext';import DrawerStatusContext from'../utils/DrawerStatusContext';import getDrawerStatusFromState from'../utils/getDrawerStatusFromState';import DrawerContent from'./DrawerContent';import DrawerToggleButton from'./DrawerToggleButton';import{GestureHandlerRootView}from'./GestureHandler';import{MaybeScreen,MaybeScreenContainer}from'./ScreenFallback';var getDefaultDrawerWidth=function getDefaultDrawerWidth(_ref){var height=_ref.height,width=_ref.width;var smallerAxisSize=Math.min(height,width);var isLandscape=width>height;var isTablet=smallerAxisSize>=600;var appBarHeight=\"web\"==='ios'?isLandscape?32:44:56;var maxWidth=isTablet?320:280;return Math.min(smallerAxisSize-appBarHeight,maxWidth);};var GestureHandlerWrapper=GestureHandlerRootView!=null?GestureHandlerRootView:View;function DrawerViewBase(_ref2){var _Reanimated$isConfigu;var state=_ref2.state,navigation=_ref2.navigation,descriptors=_ref2.descriptors,defaultStatus=_ref2.defaultStatus,_ref2$drawerContent=_ref2.drawerContent,drawerContent=_ref2$drawerContent===void 0?function(props){return React.createElement(DrawerContent,props);}:_ref2$drawerContent,_ref2$detachInactiveS=_ref2.detachInactiveScreens,detachInactiveScreens=_ref2$detachInactiveS===void 0?\"web\"==='web'||\"web\"==='android'||\"web\"==='ios':_ref2$detachInactiveS,_ref2$useLegacyImplem=_ref2.useLegacyImplementation,useLegacyImplementation=_ref2$useLegacyImplem===void 0?!((_Reanimated$isConfigu=Reanimated.isConfigured)!==null&&_Reanimated$isConfigu!==void 0&&_Reanimated$isConfigu.call(Reanimated)):_ref2$useLegacyImplem;var legacyImplemenationNotAvailable=require('react-native-reanimated').abs===undefined;if(useLegacyImplementation&&legacyImplemenationNotAvailable){throw new Error('The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.');}var Drawer=useLegacyImplementation?require('./legacy/Drawer').default:require('./modern/Drawer').default;var focusedRouteKey=state.routes[state.index].key;var _descriptors$focusedR=descriptors[focusedRouteKey].options,_descriptors$focusedR2=_descriptors$focusedR.drawerHideStatusBarOnOpen,drawerHideStatusBarOnOpen=_descriptors$focusedR2===void 0?false:_descriptors$focusedR2,_descriptors$focusedR3=_descriptors$focusedR.drawerPosition,drawerPosition=_descriptors$focusedR3===void 0?I18nManager.getConstants().isRTL?'right':'left':_descriptors$focusedR3,_descriptors$focusedR4=_descriptors$focusedR.drawerStatusBarAnimation,drawerStatusBarAnimation=_descriptors$focusedR4===void 0?'slide':_descriptors$focusedR4,drawerStyle=_descriptors$focusedR.drawerStyle,_descriptors$focusedR5=_descriptors$focusedR.drawerType,drawerType=_descriptors$focusedR5===void 0?'front':_descriptors$focusedR5,gestureHandlerProps=_descriptors$focusedR.gestureHandlerProps,_descriptors$focusedR6=_descriptors$focusedR.keyboardDismissMode,keyboardDismissMode=_descriptors$focusedR6===void 0?'on-drag':_descriptors$focusedR6,_descriptors$focusedR7=_descriptors$focusedR.overlayColor,overlayColor=_descriptors$focusedR7===void 0?'rgba(0, 0, 0, 0.5)':_descriptors$focusedR7,_descriptors$focusedR8=_descriptors$focusedR.swipeEdgeWidth,swipeEdgeWidth=_descriptors$focusedR8===void 0?32:_descriptors$focusedR8,_descriptors$focusedR9=_descriptors$focusedR.swipeEnabled,swipeEnabled=_descriptors$focusedR9===void 0?\"web\"!=='web'&&\"web\"!=='windows'&&\"web\"!=='macos':_descriptors$focusedR9,_descriptors$focusedR10=_descriptors$focusedR.swipeMinDistance,swipeMinDistance=_descriptors$focusedR10===void 0?60:_descriptors$focusedR10,overlayAccessibilityLabel=_descriptors$focusedR.overlayAccessibilityLabel;var _React$useState=React.useState([focusedRouteKey]),_React$useState2=_slicedToArray(_React$useState,2),loaded=_React$useState2[0],setLoaded=_React$useState2[1];if(!loaded.includes(focusedRouteKey)){setLoaded([].concat(_toConsumableArray(loaded),[focusedRouteKey]));}var dimensions=useSafeAreaFrame();var _useTheme=useTheme(),colors=_useTheme.colors;var drawerStatus=getDrawerStatusFromState(state);var handleDrawerOpen=React.useCallback(function(){navigation.dispatch(_objectSpread(_objectSpread({},DrawerActions.openDrawer()),{},{target:state.key}));},[navigation,state.key]);var handleDrawerClose=React.useCallback(function(){navigation.dispatch(_objectSpread(_objectSpread({},DrawerActions.closeDrawer()),{},{target:state.key}));},[navigation,state.key]);React.useEffect(function(){if(drawerStatus===defaultStatus||drawerType==='permanent'){return;}var handleHardwareBack=function handleHardwareBack(){if(!navigation.isFocused()){return false;}if(defaultStatus==='open'){handleDrawerOpen();}else{handleDrawerClose();}return true;};return addCancelListener(handleHardwareBack);},[defaultStatus,drawerStatus,drawerType,handleDrawerClose,handleDrawerOpen,navigation]);var renderDrawerContent=function renderDrawerContent(){return React.createElement(DrawerPositionContext.Provider,{value:drawerPosition},drawerContent({state:state,navigation:navigation,descriptors:descriptors}));};var renderSceneContent=function renderSceneContent(){return React.createElement(MaybeScreenContainer,{enabled:detachInactiveScreens,hasTwoStates:true,style:styles.content},state.routes.map(function(route,index){var descriptor=descriptors[route.key];var _descriptor$options=descriptor.options,_descriptor$options$l=_descriptor$options.lazy,lazy=_descriptor$options$l===void 0?true:_descriptor$options$l,unmountOnBlur=_descriptor$options.unmountOnBlur;var isFocused=state.index===index;if(unmountOnBlur&&!isFocused){return null;}if(lazy&&!loaded.includes(route.key)&&!isFocused){return null;}var _descriptor$options2=descriptor.options,freezeOnBlur=_descriptor$options2.freezeOnBlur,_descriptor$options2$=_descriptor$options2.header,header=_descriptor$options2$===void 0?function(_ref3){var _options$headerLeft;var layout=_ref3.layout,options=_ref3.options;return React.createElement(Header,_extends({},options,{layout:layout,title:getHeaderTitle(options,route.name),headerLeft:(_options$headerLeft=options.headerLeft)!=null?_options$headerLeft:function(props){return React.createElement(DrawerToggleButton,props);}}));}:_descriptor$options2$,headerShown=_descriptor$options2.headerShown,headerStatusBarHeight=_descriptor$options2.headerStatusBarHeight,headerTransparent=_descriptor$options2.headerTransparent,sceneContainerStyle=_descriptor$options2.sceneContainerStyle;return React.createElement(MaybeScreen,{key:route.key,style:[StyleSheet.absoluteFill,{zIndex:isFocused?0:-1}],visible:isFocused,enabled:detachInactiveScreens,freezeOnBlur:freezeOnBlur},React.createElement(Screen,{focused:isFocused,route:descriptor.route,navigation:descriptor.navigation,headerShown:headerShown,headerStatusBarHeight:headerStatusBarHeight,headerTransparent:headerTransparent,header:header({layout:dimensions,route:descriptor.route,navigation:descriptor.navigation,options:descriptor.options}),style:sceneContainerStyle},descriptor.render()));}));};return React.createElement(DrawerStatusContext.Provider,{value:drawerStatus},React.createElement(Drawer,{open:drawerStatus!=='closed',onOpen:handleDrawerOpen,onClose:handleDrawerClose,gestureHandlerProps:gestureHandlerProps,swipeEnabled:swipeEnabled,swipeEdgeWidth:swipeEdgeWidth,swipeVelocityThreshold:500,swipeDistanceThreshold:swipeMinDistance,hideStatusBarOnOpen:drawerHideStatusBarOnOpen,statusBarAnimation:drawerStatusBarAnimation,keyboardDismissMode:keyboardDismissMode,drawerType:drawerType,overlayAccessibilityLabel:overlayAccessibilityLabel,drawerPosition:drawerPosition,drawerStyle:[{width:getDefaultDrawerWidth(dimensions),backgroundColor:colors.card},drawerType==='permanent'&&(drawerPosition==='left'?{borderRightColor:colors.border,borderRightWidth:StyleSheet.hairlineWidth}:{borderLeftColor:colors.border,borderLeftWidth:StyleSheet.hairlineWidth}),drawerStyle],overlayStyle:{backgroundColor:overlayColor},renderDrawerContent:renderDrawerContent,renderSceneContent:renderSceneContent,dimensions:dimensions}));}export default function DrawerView(_ref4){var navigation=_ref4.navigation,rest=_objectWithoutProperties(_ref4,_excluded);return React.createElement(SafeAreaProviderCompat,null,React.createElement(GestureHandlerWrapper,{style:styles.content},React.createElement(DrawerViewBase,_extends({navigation:navigation},rest))));}var styles=StyleSheet.create({content:{flex:1}});","map":{"version":3,"names":["getHeaderTitle","Header","SafeAreaProviderCompat","Screen","DrawerActions","useTheme","React","I18nManager","Platform","StyleSheet","View","Reanimated","useSafeAreaFrame","addCancelListener","DrawerPositionContext","DrawerStatusContext","getDrawerStatusFromState","DrawerContent","DrawerToggleButton","GestureHandlerRootView","MaybeScreen","MaybeScreenContainer","getDefaultDrawerWidth","_ref","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","maxWidth","GestureHandlerWrapper","DrawerViewBase","_ref2","_Reanimated$isConfigu","state","navigation","descriptors","defaultStatus","_ref2$drawerContent","drawerContent","props","createElement","_ref2$detachInactiveS","detachInactiveScreens","_ref2$useLegacyImplem","useLegacyImplementation","isConfigured","call","legacyImplemenationNotAvailable","require","abs","undefined","Error","Drawer","default","focusedRouteKey","routes","index","key","_descriptors$focusedR","options","_descriptors$focusedR2","drawerHideStatusBarOnOpen","_descriptors$focusedR3","drawerPosition","getConstants","isRTL","_descriptors$focusedR4","drawerStatusBarAnimation","drawerStyle","_descriptors$focusedR5","drawerType","gestureHandlerProps","_descriptors$focusedR6","keyboardDismissMode","_descriptors$focusedR7","overlayColor","_descriptors$focusedR8","swipeEdgeWidth","_descriptors$focusedR9","swipeEnabled","_descriptors$focusedR10","swipeMinDistance","overlayAccessibilityLabel","_React$useState","useState","_React$useState2","_slicedToArray","loaded","setLoaded","includes","concat","_toConsumableArray","dimensions","_useTheme","colors","drawerStatus","handleDrawerOpen","useCallback","dispatch","_objectSpread","openDrawer","target","handleDrawerClose","closeDrawer","useEffect","handleHardwareBack","isFocused","renderDrawerContent","Provider","value","renderSceneContent","enabled","hasTwoStates","style","styles","content","map","route","descriptor","_descriptor$options","_descriptor$options$l","lazy","unmountOnBlur","_descriptor$options2","freezeOnBlur","_descriptor$options2$","header","_ref3","_options$headerLeft","layout","_extends","title","name","headerLeft","headerShown","headerStatusBarHeight","headerTransparent","sceneContainerStyle","absoluteFill","zIndex","visible","focused","render","open","onOpen","onClose","swipeVelocityThreshold","swipeDistanceThreshold","hideStatusBarOnOpen","statusBarAnimation","backgroundColor","card","borderRightColor","border","borderRightWidth","hairlineWidth","borderLeftColor","borderLeftWidth","overlayStyle","DrawerView","_ref4","rest","_objectWithoutProperties","_excluded","create","flex"],"sources":["C:\\appdev\\btcwallet\\src\\node_modules\\@react-navigation\\drawer\\src\\views\\DrawerView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { I18nManager, Platform, StyleSheet, View } from 'react-native';\nimport * as Reanimated from 'react-native-reanimated';\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type {\n  DrawerContentComponentProps,\n  DrawerDescriptorMap,\n  DrawerHeaderProps,\n  DrawerNavigationConfig,\n  DrawerNavigationHelpers,\n  DrawerNavigationProp,\n  DrawerProps,\n} from '../types';\nimport { addCancelListener } from '../utils/addCancelListener';\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\nimport DrawerStatusContext from '../utils/DrawerStatusContext';\nimport getDrawerStatusFromState from '../utils/getDrawerStatusFromState';\nimport DrawerContent from './DrawerContent';\nimport DrawerToggleButton from './DrawerToggleButton';\nimport { GestureHandlerRootView } from './GestureHandler';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = DrawerNavigationConfig & {\n  defaultStatus: DrawerStatus;\n  state: DrawerNavigationState<ParamListBase>;\n  navigation: DrawerNavigationHelpers;\n  descriptors: DrawerDescriptorMap;\n};\n\nconst getDefaultDrawerWidth = ({\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n}) => {\n  /*\n   * Default drawer width is screen width - header height\n   * with a max width of 280 on mobile and 320 on tablet\n   * https://material.io/components/navigation-drawer\n   */\n  const smallerAxisSize = Math.min(height, width);\n  const isLandscape = width > height;\n  const isTablet = smallerAxisSize >= 600;\n  const appBarHeight = Platform.OS === 'ios' ? (isLandscape ? 32 : 44) : 56;\n  const maxWidth = isTablet ? 320 : 280;\n\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\nfunction DrawerViewBase({\n  state,\n  navigation,\n  descriptors,\n  defaultStatus,\n  drawerContent = (props: DrawerContentComponentProps) => (\n    <DrawerContent {...props} />\n  ),\n  detachInactiveScreens = Platform.OS === 'web' ||\n    Platform.OS === 'android' ||\n    Platform.OS === 'ios',\n  // Reanimated 2 is not configured\n  // @ts-expect-error: the type definitions are incomplete\n  useLegacyImplementation = !Reanimated.isConfigured?.(),\n}: Props) {\n  // Reanimated v3 dropped legacy v1 syntax\n  const legacyImplemenationNotAvailable =\n    require('react-native-reanimated').abs === undefined;\n\n  if (useLegacyImplementation && legacyImplemenationNotAvailable) {\n    throw new Error(\n      'The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.'\n    );\n  }\n\n  const Drawer: React.ComponentType<DrawerProps> = useLegacyImplementation\n    ? require('./legacy/Drawer').default\n    : require('./modern/Drawer').default;\n\n  const focusedRouteKey = state.routes[state.index].key;\n  const {\n    drawerHideStatusBarOnOpen = false,\n    drawerPosition = I18nManager.getConstants().isRTL ? 'right' : 'left',\n    drawerStatusBarAnimation = 'slide',\n    drawerStyle,\n    drawerType = Platform.select({ ios: 'slide', default: 'front' }),\n    gestureHandlerProps,\n    keyboardDismissMode = 'on-drag',\n    overlayColor = 'rgba(0, 0, 0, 0.5)',\n    swipeEdgeWidth = 32,\n    swipeEnabled = Platform.OS !== 'web' &&\n      Platform.OS !== 'windows' &&\n      Platform.OS !== 'macos',\n    swipeMinDistance = 60,\n    overlayAccessibilityLabel,\n  } = descriptors[focusedRouteKey].options;\n\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const dimensions = useSafeAreaFrame();\n\n  const { colors } = useTheme();\n\n  const drawerStatus = getDrawerStatusFromState(state);\n\n  const handleDrawerOpen = React.useCallback(() => {\n    navigation.dispatch({\n      ...DrawerActions.openDrawer(),\n      target: state.key,\n    });\n  }, [navigation, state.key]);\n\n  const handleDrawerClose = React.useCallback(() => {\n    navigation.dispatch({\n      ...DrawerActions.closeDrawer(),\n      target: state.key,\n    });\n  }, [navigation, state.key]);\n\n  React.useEffect(() => {\n    if (drawerStatus === defaultStatus || drawerType === 'permanent') {\n      return;\n    }\n\n    const handleHardwareBack = () => {\n      // We shouldn't handle the back button if the parent screen isn't focused\n      // This will avoid the drawer overriding event listeners from a focused screen\n      if (!navigation.isFocused()) {\n        return false;\n      }\n\n      if (defaultStatus === 'open') {\n        handleDrawerOpen();\n      } else {\n        handleDrawerClose();\n      }\n\n      return true;\n    };\n\n    // We only add the listeners when drawer opens\n    // This way we can make sure that the listener is added as late as possible\n    // This will make sure that our handler will run first when back button is pressed\n    return addCancelListener(handleHardwareBack);\n  }, [\n    defaultStatus,\n    drawerStatus,\n    drawerType,\n    handleDrawerClose,\n    handleDrawerOpen,\n    navigation,\n  ]);\n\n  const renderDrawerContent = () => {\n    return (\n      <DrawerPositionContext.Provider value={drawerPosition}>\n        {drawerContent({\n          state: state,\n          navigation: navigation,\n          descriptors: descriptors,\n        })}\n      </DrawerPositionContext.Provider>\n    );\n  };\n\n  const renderSceneContent = () => {\n    return (\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates\n        style={styles.content}\n      >\n        {state.routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const { lazy = true, unmountOnBlur } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            // Don't render a lazy screen if we've never navigated to it\n            return null;\n          }\n\n          const {\n            freezeOnBlur,\n            header = ({ layout, options }: DrawerHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n                headerLeft={\n                  options.headerLeft ??\n                  ((props) => <DrawerToggleButton {...props} />)\n                }\n              />\n            ),\n            headerShown,\n            headerStatusBarHeight,\n            headerTransparent,\n            sceneContainerStyle,\n          } = descriptor.options;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              visible={isFocused}\n              enabled={detachInactiveScreens}\n              freezeOnBlur={freezeOnBlur}\n            >\n              <Screen\n                focused={isFocused}\n                route={descriptor.route}\n                navigation={descriptor.navigation}\n                headerShown={headerShown}\n                headerStatusBarHeight={headerStatusBarHeight}\n                headerTransparent={headerTransparent}\n                header={header({\n                  layout: dimensions,\n                  route: descriptor.route,\n                  navigation:\n                    descriptor.navigation as DrawerNavigationProp<ParamListBase>,\n                  options: descriptor.options,\n                })}\n                style={sceneContainerStyle}\n              >\n                {descriptor.render()}\n              </Screen>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n    );\n  };\n\n  return (\n    <DrawerStatusContext.Provider value={drawerStatus}>\n      <Drawer\n        open={drawerStatus !== 'closed'}\n        onOpen={handleDrawerOpen}\n        onClose={handleDrawerClose}\n        gestureHandlerProps={gestureHandlerProps}\n        swipeEnabled={swipeEnabled}\n        swipeEdgeWidth={swipeEdgeWidth}\n        swipeVelocityThreshold={500}\n        swipeDistanceThreshold={swipeMinDistance}\n        hideStatusBarOnOpen={drawerHideStatusBarOnOpen}\n        statusBarAnimation={drawerStatusBarAnimation}\n        keyboardDismissMode={keyboardDismissMode}\n        drawerType={drawerType}\n        overlayAccessibilityLabel={overlayAccessibilityLabel}\n        drawerPosition={drawerPosition}\n        drawerStyle={[\n          {\n            width: getDefaultDrawerWidth(dimensions),\n            backgroundColor: colors.card,\n          },\n          drawerType === 'permanent' &&\n            (drawerPosition === 'left'\n              ? {\n                  borderRightColor: colors.border,\n                  borderRightWidth: StyleSheet.hairlineWidth,\n                }\n              : {\n                  borderLeftColor: colors.border,\n                  borderLeftWidth: StyleSheet.hairlineWidth,\n                }),\n          drawerStyle,\n        ]}\n        overlayStyle={{ backgroundColor: overlayColor }}\n        renderDrawerContent={renderDrawerContent}\n        renderSceneContent={renderSceneContent}\n        dimensions={dimensions}\n      />\n    </DrawerStatusContext.Provider>\n  );\n}\n\nexport default function DrawerView({ navigation, ...rest }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <GestureHandlerWrapper style={styles.content}>\n        <DrawerViewBase navigation={navigation} {...rest} />\n      </GestureHandlerWrapper>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}