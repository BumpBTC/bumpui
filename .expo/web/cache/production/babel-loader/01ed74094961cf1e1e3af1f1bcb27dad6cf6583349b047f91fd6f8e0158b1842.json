{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{createContext,useState,useEffect,useCallback}from'react';import api from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";export var ContactContext=createContext();export var ContactProvider=function ContactProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var fetchContacts=useCallback(_asyncToGenerator(function*(){try{var response=yield api.get('/contacts');setContacts(response.data);}catch(error){console.error('Failed to fetch contacts:',error);}}),[]);useEffect(function(){fetchContacts();},[fetchContacts]);var addContact=function(){var _ref3=_asyncToGenerator(function*(contactData){try{var response=yield api.post('/contacts',contactData);setContacts([].concat(_toConsumableArray(contacts),[response.data]));}catch(error){console.error('Failed to add contact:',error);}});return function addContact(_x){return _ref3.apply(this,arguments);};}();var updateContact=function(){var _ref4=_asyncToGenerator(function*(contactId,contactData){try{var response=yield api.put(`/contacts/${contactId}`,contactData);setContacts(contacts.map(function(c){return c._id===contactId?response.data:c;}));}catch(error){console.error('Failed to update contact:',error);}});return function updateContact(_x2,_x3){return _ref4.apply(this,arguments);};}();var deleteContact=function(){var _ref5=_asyncToGenerator(function*(contactId){try{yield api.delete(`/contacts/${contactId}`);setContacts(contacts.filter(function(c){return c._id!==contactId;}));}catch(error){console.error('Failed to delete contact:',error);}});return function deleteContact(_x4){return _ref5.apply(this,arguments);};}();return _jsx(ContactContext.Provider,{value:{contacts:contacts,fetchContacts:fetchContacts,addContact:addContact,updateContact:updateContact,deleteContact:deleteContact},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","api","jsx","_jsx","ContactContext","ContactProvider","_ref","children","_useState","_useState2","_slicedToArray","contacts","setContacts","fetchContacts","_asyncToGenerator","response","get","data","error","console","addContact","_ref3","contactData","post","concat","_toConsumableArray","_x","apply","arguments","updateContact","_ref4","contactId","put","map","c","_id","_x2","_x3","deleteContact","_ref5","delete","filter","_x4","Provider","value"],"sources":["C:/appdev/btcwallet/src/contexts/ContactContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport api from '../services/api';\r\n\r\nexport const ContactContext = createContext();\r\n\r\nexport const ContactProvider = ({ children }) => {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const fetchContacts = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('/contacts');\r\n      setContacts(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch contacts:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, [fetchContacts]);\r\n\r\n  const addContact = async (contactData) => {\r\n    try {\r\n      const response = await api.post('/contacts', contactData);\r\n      setContacts([...contacts, response.data]);\r\n    } catch (error) {\r\n      console.error('Failed to add contact:', error);\r\n    }\r\n  };\r\n\r\n  const updateContact = async (contactId, contactData) => {\r\n    try {\r\n      const response = await api.put(`/contacts/${contactId}`, contactData);\r\n      setContacts(contacts.map(c => c._id === contactId ? response.data : c));\r\n    } catch (error) {\r\n      console.error('Failed to update contact:', error);\r\n    }\r\n  };\r\n\r\n  const deleteContact = async (contactId) => {\r\n    try {\r\n      await api.delete(`/contacts/${contactId}`);\r\n      setContacts(contacts.filter(c => c._id !== contactId));\r\n    } catch (error) {\r\n      console.error('Failed to delete contact:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider value={{ contacts, fetchContacts, addContact, updateContact, deleteContact }}>\r\n      {children}\r\n    </ContactContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}