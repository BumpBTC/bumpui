{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import ExpoMailComposer from'./ExpoMailComposer';export function composeAsync(_x){return _composeAsync.apply(this,arguments);}function _composeAsync(){_composeAsync=_asyncToGenerator(function*(options){return yield ExpoMailComposer.composeAsync(options);});return _composeAsync.apply(this,arguments);}export function isAvailableAsync(){return _isAvailableAsync.apply(this,arguments);}function _isAvailableAsync(){_isAvailableAsync=_asyncToGenerator(function*(){return yield ExpoMailComposer.isAvailableAsync();});return _isAvailableAsync.apply(this,arguments);}export*from'./MailComposer.types';","map":{"version":3,"names":["ExpoMailComposer","composeAsync","_x","_composeAsync","apply","arguments","_asyncToGenerator","options","isAvailableAsync","_isAvailableAsync"],"sources":["C:\\appdev\\btcwallet\\src\\node_modules\\expo-mail-composer\\src\\MailComposer.ts"],"sourcesContent":["import ExpoMailComposer from './ExpoMailComposer';\nimport { MailComposerOptions, MailComposerResult } from './MailComposer.types';\n\n// @needsAudit\n/**\n * Opens a mail modal for iOS and a mail app intent for Android and fills the fields with provided\n * data. On iOS you will need to be signed into the Mail app.\n * @return A promise fulfilled with an object containing a `status` field that specifies whether an\n * email was sent, saved, or cancelled. Android does not provide this info, so the status is always\n * set as if the email were sent.\n */\nexport async function composeAsync(options: MailComposerOptions): Promise<MailComposerResult> {\n  return await ExpoMailComposer.composeAsync(options);\n}\n\n// @needsAudit\n/**\n * Determine if the `MailComposer` API can be used in this app.\n * @return A promise resolves to `true` if the API can be used, and `false` otherwise.\n * - Returns `true` on iOS when the device has a default email setup for sending mail.\n * - Can return `false` on iOS if an MDM profile is setup to block outgoing mail. If this is the\n * case, you may want to use the Linking API instead.\n * - Always returns `true` in the browser and on Android.\n */\nexport async function isAvailableAsync(): Promise<boolean> {\n  return await ExpoMailComposer.isAvailableAsync();\n}\n\nexport * from './MailComposer.types';\n"],"mappings":"uEAAA,MAAO,CAAAA,gBAAgB,KAAM,oBAAoB,CAWjD,eAAsB,CAAAC,YAAYA,CAAAC,EAAA,SAAAC,aAAA,CAAAC,KAAA,MAAAC,SAAA,GAEjC,SAAAF,cAAA,EAAAA,aAAA,CAAAG,iBAAA,CAFM,UAA4BC,OAA4B,EAC7D,YAAa,CAAAP,gBAAgB,CAACC,YAAY,CAACM,OAAO,CAAC,CACrD,CAAC,SAAAJ,aAAA,CAAAC,KAAA,MAAAC,SAAA,GAWD,eAAsB,CAAAG,gBAAgBA,CAAA,SAAAC,iBAAA,CAAAL,KAAA,MAAAC,SAAA,GAErC,SAAAI,kBAAA,EAAAA,iBAAA,CAAAH,iBAAA,CAFM,WAA+B,CACpC,YAAa,CAAAN,gBAAgB,CAACQ,gBAAgB,EAAE,CAClD,CAAC,SAAAC,iBAAA,CAAAL,KAAA,MAAAC,SAAA,GAED,WAAc,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}