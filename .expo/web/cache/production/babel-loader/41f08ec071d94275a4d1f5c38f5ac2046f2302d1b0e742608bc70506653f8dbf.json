{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useContext}from'react';import{useTheme}from'../contexts/ThemeContext';import{WalletContext}from'../contexts/WalletContext';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Switch from\"react-native-web/dist/exports/Switch\";import{Button}from'react-native-elements';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var BiometricsSetupScreen=function BiometricsSetupScreen(_ref){var navigation=_ref.navigation;var _useTheme=useTheme(),colors=_useTheme.colors;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loginBiometrics=_useState2[0],setLoginBiometrics=_useState2[1];var _useContext=useContext(WalletContext),wallets=_useContext.wallets,updateSecurityLevel=_useContext.updateSecurityLevel,securityLevel=_useContext.securityLevel;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),transactionBiometrics=_useState4[0],setTransactionBiometrics=_useState4[1];var handleSetup=function(){var _ref2=_asyncToGenerator(function*(){alert('Biometrics set up successfully');if(securityLevel<1){yield updateSecurityLevel(1);navigation.goBack();}});return function handleSetup(){return _ref2.apply(this,arguments);};}();return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.title,children:\"Biometrics Setup\"}),_jsx(Text,{style:styles.description,children:\"Enable biometric authentication for enhanced security:\"}),_jsxs(View,{style:styles.option,children:[_jsx(Text,{children:\"Use biometrics for login\"}),_jsx(Switch,{value:loginBiometrics,onValueChange:setLoginBiometrics})]}),_jsxs(View,{style:styles.option,children:[_jsx(Text,{children:\"Use biometrics for transactions\"}),_jsx(Switch,{value:transactionBiometrics,onValueChange:setTransactionBiometrics})]}),_jsx(Button,{title:\"Setup Biometrics\",onPress:handleSetup,style:styles.button,disabled:securityLevel>=1})]});};var styles=StyleSheet.create({container:{flex:1,padding:20},title:{fontSize:24,marginBottom:20},description:{marginBottom:20},option:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',marginBottom:20}});export default BiometricsSetupScreen;","map":{"version":3,"names":["React","useState","useContext","useTheme","WalletContext","View","Text","StyleSheet","Switch","Button","jsx","_jsx","jsxs","_jsxs","BiometricsSetupScreen","_ref","navigation","_useTheme","colors","_useState","_useState2","_slicedToArray","loginBiometrics","setLoginBiometrics","_useContext","wallets","updateSecurityLevel","securityLevel","_useState3","_useState4","transactionBiometrics","setTransactionBiometrics","handleSetup","_ref2","_asyncToGenerator","alert","goBack","apply","arguments","style","styles","container","children","title","description","option","value","onValueChange","onPress","button","disabled","create","flex","padding","fontSize","marginBottom","flexDirection","justifyContent","alignItems"],"sources":["C:/appdev/btcwallet/src/screens/BiometricsSetupScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport { WalletContext } from '../contexts/WalletContext';\r\nimport { View, Text, StyleSheet, Switch } from 'react-native';\r\nimport { Button } from 'react-native-elements';\r\n\r\nconst BiometricsSetupScreen = ({ navigation }) => {\r\n    const { colors } = useTheme();\r\n  const [loginBiometrics, setLoginBiometrics] = useState(false);\r\n  const { wallets, updateSecurityLevel, securityLevel } = useContext(WalletContext);\r\n  const [transactionBiometrics, setTransactionBiometrics] = useState(false);\r\n\r\n  const handleSetup = async () => {\r\n    // TODO: Implement biometrics setup\r\n    alert('Biometrics set up successfully');\r\n    if (securityLevel < 1) {\r\n        await updateSecurityLevel(1);\r\n        navigation.goBack();\r\n      }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Biometrics Setup</Text>\r\n      <Text style={styles.description}>\r\n        Enable biometric authentication for enhanced security:\r\n      </Text>\r\n\r\n      <View style={styles.option}>\r\n        <Text>Use biometrics for login</Text>\r\n        <Switch value={loginBiometrics} onValueChange={setLoginBiometrics} />\r\n      </View>\r\n\r\n      <View style={styles.option}>\r\n        <Text>Use biometrics for transactions</Text>\r\n        <Switch value={transactionBiometrics} onValueChange={setTransactionBiometrics} />\r\n      </View>\r\n\r\n      <Button \r\n          title=\"Setup Biometrics\" \r\n          onPress={handleSetup} \r\n          style={styles.button}\r\n          disabled={securityLevel >= 1}\r\n        />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n  },\r\n  description: {\r\n    marginBottom: 20,\r\n  },\r\n  option: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default BiometricsSetupScreen;\r\n\r\n// TODO: Implement actual biometrics setup using device capabilities\r\n// TODO: Handle devices without biometric capabilities\r\n// TODO: Implement error handling for failed setups"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}